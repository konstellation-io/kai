// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtimepb/runtime.proto

package runtimepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Entrypoint struct {
	ProtoFile            string   `protobuf:"bytes,1,opt,name=proto_file,json=protoFile,proto3" json:"proto_file,omitempty"`
	Image                string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Src                  string   `protobuf:"bytes,3,opt,name=src,proto3" json:"src,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entrypoint) Reset()         { *m = Entrypoint{} }
func (m *Entrypoint) String() string { return proto.CompactTextString(m) }
func (*Entrypoint) ProtoMessage()    {}
func (*Entrypoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{0}
}

func (m *Entrypoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entrypoint.Unmarshal(m, b)
}
func (m *Entrypoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entrypoint.Marshal(b, m, deterministic)
}
func (m *Entrypoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entrypoint.Merge(m, src)
}
func (m *Entrypoint) XXX_Size() int {
	return xxx_messageInfo_Entrypoint.Size(m)
}
func (m *Entrypoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Entrypoint.DiscardUnknown(m)
}

var xxx_messageInfo_Entrypoint proto.InternalMessageInfo

func (m *Entrypoint) GetProtoFile() string {
	if m != nil {
		return m.ProtoFile
	}
	return ""
}

func (m *Entrypoint) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Entrypoint) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

type Workflow struct {
	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Entrypoint           string           `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Nodes                []*Workflow_Node `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges                []*Workflow_Edge `protobuf:"bytes,4,rep,name=edges,proto3" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{1}
}

func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (m *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(m, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Workflow) GetEntrypoint() string {
	if m != nil {
		return m.Entrypoint
	}
	return ""
}

func (m *Workflow) GetNodes() []*Workflow_Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Workflow) GetEdges() []*Workflow_Edge {
	if m != nil {
		return m.Edges
	}
	return nil
}

type Workflow_Node struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image,omitempty"`
	Src                  string   `protobuf:"bytes,4,opt,name=Src,proto3" json:"Src,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workflow_Node) Reset()         { *m = Workflow_Node{} }
func (m *Workflow_Node) String() string { return proto.CompactTextString(m) }
func (*Workflow_Node) ProtoMessage()    {}
func (*Workflow_Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{1, 0}
}

func (m *Workflow_Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow_Node.Unmarshal(m, b)
}
func (m *Workflow_Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow_Node.Marshal(b, m, deterministic)
}
func (m *Workflow_Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow_Node.Merge(m, src)
}
func (m *Workflow_Node) XXX_Size() int {
	return xxx_messageInfo_Workflow_Node.Size(m)
}
func (m *Workflow_Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow_Node proto.InternalMessageInfo

func (m *Workflow_Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Workflow_Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Workflow_Node) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Workflow_Node) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

type Workflow_Edge struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FromNode             string   `protobuf:"bytes,2,opt,name=FromNode,proto3" json:"FromNode,omitempty"`
	ToNode               string   `protobuf:"bytes,3,opt,name=ToNode,proto3" json:"ToNode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workflow_Edge) Reset()         { *m = Workflow_Edge{} }
func (m *Workflow_Edge) String() string { return proto.CompactTextString(m) }
func (*Workflow_Edge) ProtoMessage()    {}
func (*Workflow_Edge) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{1, 1}
}

func (m *Workflow_Edge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow_Edge.Unmarshal(m, b)
}
func (m *Workflow_Edge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow_Edge.Marshal(b, m, deterministic)
}
func (m *Workflow_Edge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow_Edge.Merge(m, src)
}
func (m *Workflow_Edge) XXX_Size() int {
	return xxx_messageInfo_Workflow_Edge.Size(m)
}
func (m *Workflow_Edge) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow_Edge.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow_Edge proto.InternalMessageInfo

func (m *Workflow_Edge) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Workflow_Edge) GetFromNode() string {
	if m != nil {
		return m.FromNode
	}
	return ""
}

func (m *Workflow_Edge) GetToNode() string {
	if m != nil {
		return m.ToNode
	}
	return ""
}

type Version struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Entrypoint           *Entrypoint       `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Config               []*Version_Config `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty"`
	Workflows            []*Workflow       `protobuf:"bytes,4,rep,name=workflows,proto3" json:"workflows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{2}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Version) GetEntrypoint() *Entrypoint {
	if m != nil {
		return m.Entrypoint
	}
	return nil
}

func (m *Version) GetConfig() []*Version_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Version) GetWorkflows() []*Workflow {
	if m != nil {
		return m.Workflows
	}
	return nil
}

type Version_Config struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version_Config) Reset()         { *m = Version_Config{} }
func (m *Version_Config) String() string { return proto.CompactTextString(m) }
func (*Version_Config) ProtoMessage()    {}
func (*Version_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{2, 0}
}

func (m *Version_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version_Config.Unmarshal(m, b)
}
func (m *Version_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version_Config.Marshal(b, m, deterministic)
}
func (m *Version_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version_Config.Merge(m, src)
}
func (m *Version_Config) XXX_Size() int {
	return xxx_messageInfo_Version_Config.Size(m)
}
func (m *Version_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Version_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Version_Config proto.InternalMessageInfo

func (m *Version_Config) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Version_Config) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type StartVersionRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartVersionRequest) Reset()         { *m = StartVersionRequest{} }
func (m *StartVersionRequest) String() string { return proto.CompactTextString(m) }
func (*StartVersionRequest) ProtoMessage()    {}
func (*StartVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{3}
}

func (m *StartVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVersionRequest.Unmarshal(m, b)
}
func (m *StartVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVersionRequest.Marshal(b, m, deterministic)
}
func (m *StartVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVersionRequest.Merge(m, src)
}
func (m *StartVersionRequest) XXX_Size() int {
	return xxx_messageInfo_StartVersionRequest.Size(m)
}
func (m *StartVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartVersionRequest proto.InternalMessageInfo

func (m *StartVersionRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type StartVersionResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartVersionResponse) Reset()         { *m = StartVersionResponse{} }
func (m *StartVersionResponse) String() string { return proto.CompactTextString(m) }
func (*StartVersionResponse) ProtoMessage()    {}
func (*StartVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{4}
}

func (m *StartVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVersionResponse.Unmarshal(m, b)
}
func (m *StartVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVersionResponse.Marshal(b, m, deterministic)
}
func (m *StartVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVersionResponse.Merge(m, src)
}
func (m *StartVersionResponse) XXX_Size() int {
	return xxx_messageInfo_StartVersionResponse.Size(m)
}
func (m *StartVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartVersionResponse proto.InternalMessageInfo

func (m *StartVersionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *StartVersionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateVersionConfigRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVersionConfigRequest) Reset()         { *m = UpdateVersionConfigRequest{} }
func (m *UpdateVersionConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVersionConfigRequest) ProtoMessage()    {}
func (*UpdateVersionConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{5}
}

func (m *UpdateVersionConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVersionConfigRequest.Unmarshal(m, b)
}
func (m *UpdateVersionConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVersionConfigRequest.Marshal(b, m, deterministic)
}
func (m *UpdateVersionConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVersionConfigRequest.Merge(m, src)
}
func (m *UpdateVersionConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVersionConfigRequest.Size(m)
}
func (m *UpdateVersionConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVersionConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVersionConfigRequest proto.InternalMessageInfo

func (m *UpdateVersionConfigRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type UpdateVersionConfigResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVersionConfigResponse) Reset()         { *m = UpdateVersionConfigResponse{} }
func (m *UpdateVersionConfigResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateVersionConfigResponse) ProtoMessage()    {}
func (*UpdateVersionConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{6}
}

func (m *UpdateVersionConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVersionConfigResponse.Unmarshal(m, b)
}
func (m *UpdateVersionConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVersionConfigResponse.Marshal(b, m, deterministic)
}
func (m *UpdateVersionConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVersionConfigResponse.Merge(m, src)
}
func (m *UpdateVersionConfigResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateVersionConfigResponse.Size(m)
}
func (m *UpdateVersionConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVersionConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVersionConfigResponse proto.InternalMessageInfo

func (m *UpdateVersionConfigResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UpdateVersionConfigResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StopVersionRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopVersionRequest) Reset()         { *m = StopVersionRequest{} }
func (m *StopVersionRequest) String() string { return proto.CompactTextString(m) }
func (*StopVersionRequest) ProtoMessage()    {}
func (*StopVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{7}
}

func (m *StopVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopVersionRequest.Unmarshal(m, b)
}
func (m *StopVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopVersionRequest.Marshal(b, m, deterministic)
}
func (m *StopVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopVersionRequest.Merge(m, src)
}
func (m *StopVersionRequest) XXX_Size() int {
	return xxx_messageInfo_StopVersionRequest.Size(m)
}
func (m *StopVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopVersionRequest proto.InternalMessageInfo

func (m *StopVersionRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type StopVersionResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopVersionResponse) Reset()         { *m = StopVersionResponse{} }
func (m *StopVersionResponse) String() string { return proto.CompactTextString(m) }
func (*StopVersionResponse) ProtoMessage()    {}
func (*StopVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{8}
}

func (m *StopVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopVersionResponse.Unmarshal(m, b)
}
func (m *StopVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopVersionResponse.Marshal(b, m, deterministic)
}
func (m *StopVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopVersionResponse.Merge(m, src)
}
func (m *StopVersionResponse) XXX_Size() int {
	return xxx_messageInfo_StopVersionResponse.Size(m)
}
func (m *StopVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopVersionResponse proto.InternalMessageInfo

func (m *StopVersionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *StopVersionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UnpublishVersionRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnpublishVersionRequest) Reset()         { *m = UnpublishVersionRequest{} }
func (m *UnpublishVersionRequest) String() string { return proto.CompactTextString(m) }
func (*UnpublishVersionRequest) ProtoMessage()    {}
func (*UnpublishVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{9}
}

func (m *UnpublishVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnpublishVersionRequest.Unmarshal(m, b)
}
func (m *UnpublishVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnpublishVersionRequest.Marshal(b, m, deterministic)
}
func (m *UnpublishVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnpublishVersionRequest.Merge(m, src)
}
func (m *UnpublishVersionRequest) XXX_Size() int {
	return xxx_messageInfo_UnpublishVersionRequest.Size(m)
}
func (m *UnpublishVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnpublishVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnpublishVersionRequest proto.InternalMessageInfo

func (m *UnpublishVersionRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type UnpublishVersionResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnpublishVersionResponse) Reset()         { *m = UnpublishVersionResponse{} }
func (m *UnpublishVersionResponse) String() string { return proto.CompactTextString(m) }
func (*UnpublishVersionResponse) ProtoMessage()    {}
func (*UnpublishVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{10}
}

func (m *UnpublishVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnpublishVersionResponse.Unmarshal(m, b)
}
func (m *UnpublishVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnpublishVersionResponse.Marshal(b, m, deterministic)
}
func (m *UnpublishVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnpublishVersionResponse.Merge(m, src)
}
func (m *UnpublishVersionResponse) XXX_Size() int {
	return xxx_messageInfo_UnpublishVersionResponse.Size(m)
}
func (m *UnpublishVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnpublishVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnpublishVersionResponse proto.InternalMessageInfo

func (m *UnpublishVersionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UnpublishVersionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PublishVersionRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishVersionRequest) Reset()         { *m = PublishVersionRequest{} }
func (m *PublishVersionRequest) String() string { return proto.CompactTextString(m) }
func (*PublishVersionRequest) ProtoMessage()    {}
func (*PublishVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{11}
}

func (m *PublishVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishVersionRequest.Unmarshal(m, b)
}
func (m *PublishVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishVersionRequest.Marshal(b, m, deterministic)
}
func (m *PublishVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishVersionRequest.Merge(m, src)
}
func (m *PublishVersionRequest) XXX_Size() int {
	return xxx_messageInfo_PublishVersionRequest.Size(m)
}
func (m *PublishVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishVersionRequest proto.InternalMessageInfo

func (m *PublishVersionRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type PublishVersionResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishVersionResponse) Reset()         { *m = PublishVersionResponse{} }
func (m *PublishVersionResponse) String() string { return proto.CompactTextString(m) }
func (*PublishVersionResponse) ProtoMessage()    {}
func (*PublishVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{12}
}

func (m *PublishVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishVersionResponse.Unmarshal(m, b)
}
func (m *PublishVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishVersionResponse.Marshal(b, m, deterministic)
}
func (m *PublishVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishVersionResponse.Merge(m, src)
}
func (m *PublishVersionResponse) XXX_Size() int {
	return xxx_messageInfo_PublishVersionResponse.Size(m)
}
func (m *PublishVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishVersionResponse proto.InternalMessageInfo

func (m *PublishVersionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *PublishVersionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type WatchNodeLogsRequest struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchNodeLogsRequest) Reset()         { *m = WatchNodeLogsRequest{} }
func (m *WatchNodeLogsRequest) String() string { return proto.CompactTextString(m) }
func (*WatchNodeLogsRequest) ProtoMessage()    {}
func (*WatchNodeLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{13}
}

func (m *WatchNodeLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchNodeLogsRequest.Unmarshal(m, b)
}
func (m *WatchNodeLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchNodeLogsRequest.Marshal(b, m, deterministic)
}
func (m *WatchNodeLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchNodeLogsRequest.Merge(m, src)
}
func (m *WatchNodeLogsRequest) XXX_Size() int {
	return xxx_messageInfo_WatchNodeLogsRequest.Size(m)
}
func (m *WatchNodeLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchNodeLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchNodeLogsRequest proto.InternalMessageInfo

func (m *WatchNodeLogsRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type WatchNodeLogsResponse struct {
	Date                 string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	VersionId            string   `protobuf:"bytes,3,opt,name=versionId,proto3" json:"versionId,omitempty"`
	NodeId               string   `protobuf:"bytes,4,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	PodId                string   `protobuf:"bytes,5,opt,name=podId,proto3" json:"podId,omitempty"`
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Level                string   `protobuf:"bytes,7,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchNodeLogsResponse) Reset()         { *m = WatchNodeLogsResponse{} }
func (m *WatchNodeLogsResponse) String() string { return proto.CompactTextString(m) }
func (*WatchNodeLogsResponse) ProtoMessage()    {}
func (*WatchNodeLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{14}
}

func (m *WatchNodeLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchNodeLogsResponse.Unmarshal(m, b)
}
func (m *WatchNodeLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchNodeLogsResponse.Marshal(b, m, deterministic)
}
func (m *WatchNodeLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchNodeLogsResponse.Merge(m, src)
}
func (m *WatchNodeLogsResponse) XXX_Size() int {
	return xxx_messageInfo_WatchNodeLogsResponse.Size(m)
}
func (m *WatchNodeLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchNodeLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchNodeLogsResponse proto.InternalMessageInfo

func (m *WatchNodeLogsResponse) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *WatchNodeLogsResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WatchNodeLogsResponse) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *WatchNodeLogsResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *WatchNodeLogsResponse) GetPodId() string {
	if m != nil {
		return m.PodId
	}
	return ""
}

func (m *WatchNodeLogsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *WatchNodeLogsResponse) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

type WatchVersionRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchVersionRequest) Reset()         { *m = WatchVersionRequest{} }
func (m *WatchVersionRequest) String() string { return proto.CompactTextString(m) }
func (*WatchVersionRequest) ProtoMessage()    {}
func (*WatchVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{15}
}

func (m *WatchVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchVersionRequest.Unmarshal(m, b)
}
func (m *WatchVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchVersionRequest.Marshal(b, m, deterministic)
}
func (m *WatchVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchVersionRequest.Merge(m, src)
}
func (m *WatchVersionRequest) XXX_Size() int {
	return xxx_messageInfo_WatchVersionRequest.Size(m)
}
func (m *WatchVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchVersionRequest proto.InternalMessageInfo

func (m *WatchVersionRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type VersionNodeStatusResponse struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionNodeStatusResponse) Reset()         { *m = VersionNodeStatusResponse{} }
func (m *VersionNodeStatusResponse) String() string { return proto.CompactTextString(m) }
func (*VersionNodeStatusResponse) ProtoMessage()    {}
func (*VersionNodeStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{16}
}

func (m *VersionNodeStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionNodeStatusResponse.Unmarshal(m, b)
}
func (m *VersionNodeStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionNodeStatusResponse.Marshal(b, m, deterministic)
}
func (m *VersionNodeStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionNodeStatusResponse.Merge(m, src)
}
func (m *VersionNodeStatusResponse) XXX_Size() int {
	return xxx_messageInfo_VersionNodeStatusResponse.Size(m)
}
func (m *VersionNodeStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionNodeStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionNodeStatusResponse proto.InternalMessageInfo

func (m *VersionNodeStatusResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *VersionNodeStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *VersionNodeStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Entrypoint)(nil), "runtime.Entrypoint")
	proto.RegisterType((*Workflow)(nil), "runtime.Workflow")
	proto.RegisterType((*Workflow_Node)(nil), "runtime.Workflow.Node")
	proto.RegisterType((*Workflow_Edge)(nil), "runtime.Workflow.Edge")
	proto.RegisterType((*Version)(nil), "runtime.Version")
	proto.RegisterType((*Version_Config)(nil), "runtime.Version.Config")
	proto.RegisterType((*StartVersionRequest)(nil), "runtime.StartVersionRequest")
	proto.RegisterType((*StartVersionResponse)(nil), "runtime.StartVersionResponse")
	proto.RegisterType((*UpdateVersionConfigRequest)(nil), "runtime.UpdateVersionConfigRequest")
	proto.RegisterType((*UpdateVersionConfigResponse)(nil), "runtime.UpdateVersionConfigResponse")
	proto.RegisterType((*StopVersionRequest)(nil), "runtime.StopVersionRequest")
	proto.RegisterType((*StopVersionResponse)(nil), "runtime.StopVersionResponse")
	proto.RegisterType((*UnpublishVersionRequest)(nil), "runtime.UnpublishVersionRequest")
	proto.RegisterType((*UnpublishVersionResponse)(nil), "runtime.UnpublishVersionResponse")
	proto.RegisterType((*PublishVersionRequest)(nil), "runtime.PublishVersionRequest")
	proto.RegisterType((*PublishVersionResponse)(nil), "runtime.PublishVersionResponse")
	proto.RegisterType((*WatchNodeLogsRequest)(nil), "runtime.WatchNodeLogsRequest")
	proto.RegisterType((*WatchNodeLogsResponse)(nil), "runtime.WatchNodeLogsResponse")
	proto.RegisterType((*WatchVersionRequest)(nil), "runtime.WatchVersionRequest")
	proto.RegisterType((*VersionNodeStatusResponse)(nil), "runtime.VersionNodeStatusResponse")
}

func init() { proto.RegisterFile("runtimepb/runtime.proto", fileDescriptor_d0e5095094a8d27f) }

var fileDescriptor_d0e5095094a8d27f = []byte{
	// 772 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x5f, 0x53, 0xd3, 0x40,
	0x10, 0xb7, 0x6d, 0x68, 0xe9, 0x56, 0x19, 0x3c, 0xa0, 0xc4, 0x50, 0x10, 0xa3, 0x0f, 0x8c, 0xe3,
	0x14, 0xa6, 0x7c, 0x01, 0x95, 0x81, 0xb1, 0x0c, 0x74, 0x30, 0x11, 0x19, 0x79, 0x71, 0xda, 0xe4,
	0x28, 0x19, 0xda, 0x5c, 0xcc, 0xa5, 0x65, 0xf8, 0x6a, 0xfa, 0x7d, 0x7c, 0xf5, 0x2b, 0x38, 0xf7,
	0x27, 0x97, 0xa4, 0x4d, 0x79, 0x30, 0xbe, 0xdd, 0xde, 0xee, 0xfd, 0xf6, 0xb7, 0xbf, 0xec, 0xee,
	0x04, 0x36, 0xc3, 0x89, 0x1f, 0x79, 0x63, 0x1c, 0x0c, 0xf6, 0xe5, 0xa9, 0x1d, 0x84, 0x24, 0x22,
	0xa8, 0x26, 0x4d, 0xd3, 0x06, 0x38, 0xf6, 0xa3, 0xf0, 0x21, 0x20, 0x9e, 0x1f, 0xa1, 0x6d, 0x00,
	0xee, 0xff, 0x7e, 0xe3, 0x8d, 0xb0, 0x5e, 0xda, 0x2d, 0xed, 0xd5, 0xad, 0x3a, 0xbf, 0x39, 0xf1,
	0x46, 0x18, 0xad, 0xc3, 0x92, 0x37, 0xee, 0x0f, 0xb1, 0x5e, 0xe6, 0x1e, 0x61, 0xa0, 0x55, 0xa8,
	0xd0, 0xd0, 0xd1, 0x2b, 0xfc, 0x8e, 0x1d, 0xcd, 0x9f, 0x65, 0x58, 0xbe, 0x22, 0xe1, 0xdd, 0xcd,
	0x88, 0xdc, 0x23, 0x04, 0x9a, 0xdf, 0x1f, 0xc7, 0x68, 0xfc, 0x8c, 0x76, 0x00, 0xb0, 0xca, 0x2a,
	0xd1, 0x52, 0x37, 0xe8, 0x1d, 0x2c, 0xf9, 0xc4, 0xc5, 0x54, 0xaf, 0xec, 0x56, 0xf6, 0x1a, 0x9d,
	0x66, 0x3b, 0x66, 0x1f, 0xa3, 0xb6, 0x7b, 0xc4, 0xc5, 0x96, 0x08, 0x62, 0xd1, 0xd8, 0x1d, 0x62,
	0xaa, 0x6b, 0x8b, 0xa2, 0x8f, 0xdd, 0x21, 0xb6, 0x44, 0x90, 0x61, 0x81, 0xc6, 0x1e, 0xa3, 0x15,
	0x28, 0x77, 0x5d, 0xc9, 0xaa, 0xdc, 0x75, 0x19, 0xcf, 0x1e, 0xe3, 0x29, 0xd8, 0xf0, 0x33, 0x2b,
	0xb8, 0xcb, 0x0b, 0x16, 0xc5, 0x09, 0x83, 0x15, 0x6c, 0x87, 0x8e, 0xae, 0x89, 0x82, 0xed, 0xd0,
	0x31, 0x4e, 0x41, 0x63, 0x29, 0xe6, 0x30, 0x0d, 0x58, 0x3e, 0x09, 0xc9, 0x98, 0xe5, 0x93, 0xb8,
	0xca, 0x46, 0x4d, 0xa8, 0x7e, 0x21, 0xdc, 0x23, 0xc0, 0xa5, 0x65, 0xfe, 0x2e, 0x41, 0xed, 0x2b,
	0x0e, 0xa9, 0x47, 0xfc, 0x5c, 0xed, 0x0e, 0xe7, 0xb4, 0x6b, 0x74, 0xd6, 0x54, 0xc9, 0xc9, 0xc7,
	0xcc, 0x08, 0xba, 0x0f, 0x55, 0x87, 0xf8, 0x37, 0xde, 0x50, 0x2a, 0xba, 0xa9, 0x1e, 0xc8, 0x54,
	0xed, 0x23, 0xee, 0xb6, 0x64, 0x18, 0xda, 0x87, 0xfa, 0xbd, 0x54, 0x2f, 0xd6, 0xf5, 0xf9, 0x9c,
	0xae, 0x56, 0x12, 0x63, 0x1c, 0x40, 0x55, 0x40, 0x30, 0x79, 0xee, 0xf0, 0x83, 0xe4, 0xcc, 0x8e,
	0x4c, 0xc6, 0x69, 0x7f, 0x34, 0x51, 0x7d, 0xc3, 0x0d, 0xf3, 0x03, 0xac, 0xd9, 0x51, 0x3f, 0x8c,
	0x24, 0x03, 0x0b, 0xff, 0x98, 0x60, 0x1a, 0xa1, 0xb7, 0x50, 0x9b, 0x8a, 0x1b, 0x0e, 0xd1, 0xe8,
	0xac, 0xce, 0x72, 0xb5, 0xe2, 0x00, 0xf3, 0x14, 0xd6, 0xb3, 0x10, 0x34, 0x20, 0x3e, 0xc5, 0x48,
	0x87, 0x1a, 0x9d, 0x38, 0x0e, 0xa6, 0x94, 0x63, 0x2c, 0x5b, 0xb1, 0xc9, 0x3c, 0x63, 0x4c, 0x69,
	0xd2, 0xc4, 0xb1, 0x69, 0x7e, 0x02, 0xe3, 0x32, 0x70, 0xfb, 0x11, 0x96, 0x60, 0x52, 0x90, 0x7f,
	0x60, 0xf5, 0x19, 0xb6, 0x72, 0x91, 0x0a, 0x90, 0x7b, 0x0f, 0xc8, 0x8e, 0x48, 0x50, 0x40, 0xaa,
	0x2e, 0x53, 0x3b, 0x85, 0x50, 0x80, 0xcc, 0x31, 0x6c, 0x5e, 0xfa, 0xc1, 0x64, 0x30, 0xf2, 0xe8,
	0x6d, 0x01, 0x46, 0x3d, 0xd0, 0xe7, 0x61, 0x0a, 0xd0, 0x3a, 0x82, 0x8d, 0x8b, 0xc2, 0xa4, 0xce,
	0xa0, 0x79, 0xf1, 0xff, 0x28, 0xb5, 0x61, 0xfd, 0xaa, 0x1f, 0x39, 0xb7, 0x6c, 0xb0, 0xcf, 0xc8,
	0x90, 0xc6, 0x8c, 0x9a, 0x50, 0x65, 0xab, 0x4b, 0xed, 0x0a, 0x69, 0x99, 0xbf, 0x4a, 0xb0, 0x31,
	0xf3, 0x40, 0x66, 0x47, 0xa0, 0xb1, 0x8e, 0x8a, 0x37, 0x01, 0x3b, 0xb3, 0xbb, 0xe8, 0x21, 0x50,
	0x1b, 0x8b, 0x9d, 0x51, 0x0b, 0xea, 0xb2, 0x94, 0xae, 0x2b, 0x17, 0x4b, 0x72, 0x91, 0xca, 0xab,
	0xa5, 0xf3, 0xb2, 0x01, 0x0d, 0x88, 0xdb, 0x75, 0xf5, 0x25, 0x31, 0xa0, 0xdc, 0x48, 0xd7, 0x55,
	0xcd, 0xd4, 0xc5, 0xe2, 0x47, 0x78, 0x8a, 0x47, 0x7a, 0x4d, 0xc4, 0x73, 0x83, 0x0d, 0x34, 0x27,
	0x5f, 0x40, 0x7e, 0x0c, 0x2f, 0xe4, 0x1d, 0x53, 0xc0, 0x8e, 0xfa, 0xd1, 0x24, 0xd1, 0xa0, 0x09,
	0xd5, 0x5e, 0x46, 0x35, 0x61, 0xb1, 0x7b, 0x11, 0x29, 0x95, 0x90, 0x16, 0xe3, 0x7f, 0x2e, 0xf9,
	0x0b, 0x25, 0x62, 0xb3, 0xf3, 0x47, 0x83, 0x15, 0x4b, 0x70, 0xb0, 0x71, 0x38, 0xf5, 0x1c, 0x8c,
	0xce, 0xe1, 0x69, 0x7a, 0x95, 0xa0, 0x96, 0x22, 0x99, 0xb3, 0xa4, 0x8c, 0xed, 0x05, 0x5e, 0xc1,
	0xd4, 0x7c, 0x82, 0x4e, 0xa1, 0x91, 0x1a, 0x37, 0xb4, 0x95, 0x8a, 0x9f, 0x1d, 0x63, 0xa3, 0x95,
	0xef, 0x54, 0x58, 0x36, 0xac, 0x64, 0x7b, 0x12, 0xed, 0xa8, 0x17, 0xb9, 0x1d, 0x6f, 0xbc, 0x5c,
	0xe8, 0x57, 0xa0, 0xdf, 0x60, 0x75, 0x76, 0xfa, 0xd0, 0xae, 0x7a, 0xb6, 0x60, 0xbe, 0x8d, 0x57,
	0x8f, 0x44, 0x28, 0xe8, 0x01, 0xac, 0xe5, 0xec, 0x3f, 0xf4, 0x3a, 0x79, 0xbb, 0x70, 0xcf, 0x1a,
	0x6f, 0x1e, 0x0f, 0x52, 0x39, 0x2c, 0x78, 0x96, 0x19, 0x14, 0x94, 0x7c, 0x91, 0xbc, 0x89, 0x33,
	0x76, 0x16, 0xb9, 0x63, 0xc4, 0x83, 0x12, 0xba, 0x06, 0x94, 0xee, 0x5f, 0xd9, 0x45, 0xad, 0xec,
	0xcb, 0x19, 0x41, 0xcc, 0xd9, 0x5e, 0x9e, 0xef, 0x5b, 0x86, 0xfd, 0xb1, 0x71, 0x5d, 0x57, 0xff,
	0x62, 0x83, 0x2a, 0xff, 0xa5, 0x3a, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x65, 0xb8, 0x50, 0x5e,
	0x9f, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RuntimeServiceClient is the client API for RuntimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuntimeServiceClient interface {
	StartVersion(ctx context.Context, in *StartVersionRequest, opts ...grpc.CallOption) (*StartVersionResponse, error)
	StopVersion(ctx context.Context, in *StopVersionRequest, opts ...grpc.CallOption) (*StopVersionResponse, error)
	PublishVersion(ctx context.Context, in *PublishVersionRequest, opts ...grpc.CallOption) (*PublishVersionResponse, error)
	UnpublishVersion(ctx context.Context, in *UnpublishVersionRequest, opts ...grpc.CallOption) (*UnpublishVersionResponse, error)
	UpdateVersionConfig(ctx context.Context, in *UpdateVersionConfigRequest, opts ...grpc.CallOption) (*UpdateVersionConfigResponse, error)
	WatchNodeLogs(ctx context.Context, in *WatchNodeLogsRequest, opts ...grpc.CallOption) (RuntimeService_WatchNodeLogsClient, error)
	WatchVersionStatus(ctx context.Context, in *WatchVersionRequest, opts ...grpc.CallOption) (RuntimeService_WatchVersionStatusClient, error)
}

type runtimeServiceClient struct {
	cc *grpc.ClientConn
}

func NewRuntimeServiceClient(cc *grpc.ClientConn) RuntimeServiceClient {
	return &runtimeServiceClient{cc}
}

func (c *runtimeServiceClient) StartVersion(ctx context.Context, in *StartVersionRequest, opts ...grpc.CallOption) (*StartVersionResponse, error) {
	out := new(StartVersionResponse)
	err := c.cc.Invoke(ctx, "/runtime.RuntimeService/StartVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeServiceClient) StopVersion(ctx context.Context, in *StopVersionRequest, opts ...grpc.CallOption) (*StopVersionResponse, error) {
	out := new(StopVersionResponse)
	err := c.cc.Invoke(ctx, "/runtime.RuntimeService/StopVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeServiceClient) PublishVersion(ctx context.Context, in *PublishVersionRequest, opts ...grpc.CallOption) (*PublishVersionResponse, error) {
	out := new(PublishVersionResponse)
	err := c.cc.Invoke(ctx, "/runtime.RuntimeService/PublishVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeServiceClient) UnpublishVersion(ctx context.Context, in *UnpublishVersionRequest, opts ...grpc.CallOption) (*UnpublishVersionResponse, error) {
	out := new(UnpublishVersionResponse)
	err := c.cc.Invoke(ctx, "/runtime.RuntimeService/UnpublishVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeServiceClient) UpdateVersionConfig(ctx context.Context, in *UpdateVersionConfigRequest, opts ...grpc.CallOption) (*UpdateVersionConfigResponse, error) {
	out := new(UpdateVersionConfigResponse)
	err := c.cc.Invoke(ctx, "/runtime.RuntimeService/UpdateVersionConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeServiceClient) WatchNodeLogs(ctx context.Context, in *WatchNodeLogsRequest, opts ...grpc.CallOption) (RuntimeService_WatchNodeLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RuntimeService_serviceDesc.Streams[0], "/runtime.RuntimeService/WatchNodeLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeServiceWatchNodeLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RuntimeService_WatchNodeLogsClient interface {
	Recv() (*WatchNodeLogsResponse, error)
	grpc.ClientStream
}

type runtimeServiceWatchNodeLogsClient struct {
	grpc.ClientStream
}

func (x *runtimeServiceWatchNodeLogsClient) Recv() (*WatchNodeLogsResponse, error) {
	m := new(WatchNodeLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *runtimeServiceClient) WatchVersionStatus(ctx context.Context, in *WatchVersionRequest, opts ...grpc.CallOption) (RuntimeService_WatchVersionStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RuntimeService_serviceDesc.Streams[1], "/runtime.RuntimeService/WatchVersionStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeServiceWatchVersionStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RuntimeService_WatchVersionStatusClient interface {
	Recv() (*VersionNodeStatusResponse, error)
	grpc.ClientStream
}

type runtimeServiceWatchVersionStatusClient struct {
	grpc.ClientStream
}

func (x *runtimeServiceWatchVersionStatusClient) Recv() (*VersionNodeStatusResponse, error) {
	m := new(VersionNodeStatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RuntimeServiceServer is the server API for RuntimeService service.
type RuntimeServiceServer interface {
	StartVersion(context.Context, *StartVersionRequest) (*StartVersionResponse, error)
	StopVersion(context.Context, *StopVersionRequest) (*StopVersionResponse, error)
	PublishVersion(context.Context, *PublishVersionRequest) (*PublishVersionResponse, error)
	UnpublishVersion(context.Context, *UnpublishVersionRequest) (*UnpublishVersionResponse, error)
	UpdateVersionConfig(context.Context, *UpdateVersionConfigRequest) (*UpdateVersionConfigResponse, error)
	WatchNodeLogs(*WatchNodeLogsRequest, RuntimeService_WatchNodeLogsServer) error
	WatchVersionStatus(*WatchVersionRequest, RuntimeService_WatchVersionStatusServer) error
}

// UnimplementedRuntimeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRuntimeServiceServer struct {
}

func (*UnimplementedRuntimeServiceServer) StartVersion(ctx context.Context, req *StartVersionRequest) (*StartVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartVersion not implemented")
}
func (*UnimplementedRuntimeServiceServer) StopVersion(ctx context.Context, req *StopVersionRequest) (*StopVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopVersion not implemented")
}
func (*UnimplementedRuntimeServiceServer) PublishVersion(ctx context.Context, req *PublishVersionRequest) (*PublishVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishVersion not implemented")
}
func (*UnimplementedRuntimeServiceServer) UnpublishVersion(ctx context.Context, req *UnpublishVersionRequest) (*UnpublishVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnpublishVersion not implemented")
}
func (*UnimplementedRuntimeServiceServer) UpdateVersionConfig(ctx context.Context, req *UpdateVersionConfigRequest) (*UpdateVersionConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVersionConfig not implemented")
}
func (*UnimplementedRuntimeServiceServer) WatchNodeLogs(req *WatchNodeLogsRequest, srv RuntimeService_WatchNodeLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchNodeLogs not implemented")
}
func (*UnimplementedRuntimeServiceServer) WatchVersionStatus(req *WatchVersionRequest, srv RuntimeService_WatchVersionStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchVersionStatus not implemented")
}

func RegisterRuntimeServiceServer(s *grpc.Server, srv RuntimeServiceServer) {
	s.RegisterService(&_RuntimeService_serviceDesc, srv)
}

func _RuntimeService_StartVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServiceServer).StartVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.RuntimeService/StartVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServiceServer).StartVersion(ctx, req.(*StartVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeService_StopVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServiceServer).StopVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.RuntimeService/StopVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServiceServer).StopVersion(ctx, req.(*StopVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeService_PublishVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServiceServer).PublishVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.RuntimeService/PublishVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServiceServer).PublishVersion(ctx, req.(*PublishVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeService_UnpublishVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnpublishVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServiceServer).UnpublishVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.RuntimeService/UnpublishVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServiceServer).UnpublishVersion(ctx, req.(*UnpublishVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeService_UpdateVersionConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVersionConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServiceServer).UpdateVersionConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.RuntimeService/UpdateVersionConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServiceServer).UpdateVersionConfig(ctx, req.(*UpdateVersionConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeService_WatchNodeLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchNodeLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RuntimeServiceServer).WatchNodeLogs(m, &runtimeServiceWatchNodeLogsServer{stream})
}

type RuntimeService_WatchNodeLogsServer interface {
	Send(*WatchNodeLogsResponse) error
	grpc.ServerStream
}

type runtimeServiceWatchNodeLogsServer struct {
	grpc.ServerStream
}

func (x *runtimeServiceWatchNodeLogsServer) Send(m *WatchNodeLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RuntimeService_WatchVersionStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchVersionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RuntimeServiceServer).WatchVersionStatus(m, &runtimeServiceWatchVersionStatusServer{stream})
}

type RuntimeService_WatchVersionStatusServer interface {
	Send(*VersionNodeStatusResponse) error
	grpc.ServerStream
}

type runtimeServiceWatchVersionStatusServer struct {
	grpc.ServerStream
}

func (x *runtimeServiceWatchVersionStatusServer) Send(m *VersionNodeStatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _RuntimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "runtime.RuntimeService",
	HandlerType: (*RuntimeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartVersion",
			Handler:    _RuntimeService_StartVersion_Handler,
		},
		{
			MethodName: "StopVersion",
			Handler:    _RuntimeService_StopVersion_Handler,
		},
		{
			MethodName: "PublishVersion",
			Handler:    _RuntimeService_PublishVersion_Handler,
		},
		{
			MethodName: "UnpublishVersion",
			Handler:    _RuntimeService_UnpublishVersion_Handler,
		},
		{
			MethodName: "UpdateVersionConfig",
			Handler:    _RuntimeService_UpdateVersionConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchNodeLogs",
			Handler:       _RuntimeService_WatchNodeLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchVersionStatus",
			Handler:       _RuntimeService_WatchVersionStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "runtimepb/runtime.proto",
}
