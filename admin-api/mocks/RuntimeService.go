// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import entity "gitlab.com/konstellation/konstellation-ce/kre/admin-api/domain/entity"
import mock "github.com/stretchr/testify/mock"

// RuntimeService is an autogenerated mock type for the RuntimeService type
type RuntimeService struct {
	mock.Mock
}

// Create provides a mock function with given fields: runtime
func (_m *RuntimeService) Create(runtime *entity.Runtime) (string, error) {
	ret := _m.Called(runtime)

	var r0 string
	if rf, ok := ret.Get(0).(func(*entity.Runtime) string); ok {
		r0 = rf(runtime)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*entity.Runtime) error); ok {
		r1 = rf(runtime)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WaitForRuntimeStarted provides a mock function with given fields: runtime
func (_m *RuntimeService) WaitForRuntimeStarted(runtime *entity.Runtime) (*entity.RuntimeStatus, error) {
	ret := _m.Called(runtime)

	var r0 *entity.RuntimeStatus
	if rf, ok := ret.Get(0).(func(*entity.Runtime) *entity.RuntimeStatus); ok {
		r0 = rf(runtime)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.RuntimeStatus)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*entity.Runtime) error); ok {
		r1 = rf(runtime)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
