// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/monitoringpb/monitoring.proto

package monitoringpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeLogsRequest struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeLogsRequest) Reset()         { *m = NodeLogsRequest{} }
func (m *NodeLogsRequest) String() string { return proto.CompactTextString(m) }
func (*NodeLogsRequest) ProtoMessage()    {}
func (*NodeLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{0}
}

func (m *NodeLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeLogsRequest.Unmarshal(m, b)
}
func (m *NodeLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeLogsRequest.Marshal(b, m, deterministic)
}
func (m *NodeLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeLogsRequest.Merge(m, src)
}
func (m *NodeLogsRequest) XXX_Size() int {
	return xxx_messageInfo_NodeLogsRequest.Size(m)
}
func (m *NodeLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeLogsRequest proto.InternalMessageInfo

func (m *NodeLogsRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type NodeLogsResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date                 string   `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	VersionId            string   `protobuf:"bytes,3,opt,name=versionId,proto3" json:"versionId,omitempty"`
	NodeId               string   `protobuf:"bytes,4,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	PodId                string   `protobuf:"bytes,5,opt,name=podId,proto3" json:"podId,omitempty"`
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Level                string   `protobuf:"bytes,7,opt,name=level,proto3" json:"level,omitempty"`
	NodeName             string   `protobuf:"bytes,8,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeLogsResponse) Reset()         { *m = NodeLogsResponse{} }
func (m *NodeLogsResponse) String() string { return proto.CompactTextString(m) }
func (*NodeLogsResponse) ProtoMessage()    {}
func (*NodeLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{1}
}

func (m *NodeLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeLogsResponse.Unmarshal(m, b)
}
func (m *NodeLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeLogsResponse.Marshal(b, m, deterministic)
}
func (m *NodeLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeLogsResponse.Merge(m, src)
}
func (m *NodeLogsResponse) XXX_Size() int {
	return xxx_messageInfo_NodeLogsResponse.Size(m)
}
func (m *NodeLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeLogsResponse proto.InternalMessageInfo

func (m *NodeLogsResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NodeLogsResponse) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *NodeLogsResponse) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *NodeLogsResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeLogsResponse) GetPodId() string {
	if m != nil {
		return m.PodId
	}
	return ""
}

func (m *NodeLogsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *NodeLogsResponse) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *NodeLogsResponse) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type NodeStatusRequest struct {
	VersionName          string   `protobuf:"bytes,2,opt,name=versionName,proto3" json:"versionName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStatusRequest) Reset()         { *m = NodeStatusRequest{} }
func (m *NodeStatusRequest) String() string { return proto.CompactTextString(m) }
func (*NodeStatusRequest) ProtoMessage()    {}
func (*NodeStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{2}
}

func (m *NodeStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatusRequest.Unmarshal(m, b)
}
func (m *NodeStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatusRequest.Marshal(b, m, deterministic)
}
func (m *NodeStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatusRequest.Merge(m, src)
}
func (m *NodeStatusRequest) XXX_Size() int {
	return xxx_messageInfo_NodeStatusRequest.Size(m)
}
func (m *NodeStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatusRequest proto.InternalMessageInfo

func (m *NodeStatusRequest) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

type NodeStatusResponse struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStatusResponse) Reset()         { *m = NodeStatusResponse{} }
func (m *NodeStatusResponse) String() string { return proto.CompactTextString(m) }
func (*NodeStatusResponse) ProtoMessage()    {}
func (*NodeStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{3}
}

func (m *NodeStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatusResponse.Unmarshal(m, b)
}
func (m *NodeStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatusResponse.Marshal(b, m, deterministic)
}
func (m *NodeStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatusResponse.Merge(m, src)
}
func (m *NodeStatusResponse) XXX_Size() int {
	return xxx_messageInfo_NodeStatusResponse.Size(m)
}
func (m *NodeStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatusResponse proto.InternalMessageInfo

func (m *NodeStatusResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NodeStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SearchLogsRequest struct {
	Search               string   `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	StartDate            string   `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate              string   `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
	WorkflowID           string   `protobuf:"bytes,4,opt,name=workflowID,proto3" json:"workflowID,omitempty"`
	NodeID               string   `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Level                string   `protobuf:"bytes,6,opt,name=level,proto3" json:"level,omitempty"`
	Cursor               string   `protobuf:"bytes,7,opt,name=cursor,proto3" json:"cursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchLogsRequest) Reset()         { *m = SearchLogsRequest{} }
func (m *SearchLogsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchLogsRequest) ProtoMessage()    {}
func (*SearchLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{4}
}

func (m *SearchLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLogsRequest.Unmarshal(m, b)
}
func (m *SearchLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLogsRequest.Marshal(b, m, deterministic)
}
func (m *SearchLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLogsRequest.Merge(m, src)
}
func (m *SearchLogsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchLogsRequest.Size(m)
}
func (m *SearchLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLogsRequest proto.InternalMessageInfo

func (m *SearchLogsRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *SearchLogsRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *SearchLogsRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *SearchLogsRequest) GetWorkflowID() string {
	if m != nil {
		return m.WorkflowID
	}
	return ""
}

func (m *SearchLogsRequest) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *SearchLogsRequest) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *SearchLogsRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

type SearchLogsResponse struct {
	Cursor               string              `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Logs                 []*NodeLogsResponse `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SearchLogsResponse) Reset()         { *m = SearchLogsResponse{} }
func (m *SearchLogsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchLogsResponse) ProtoMessage()    {}
func (*SearchLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{5}
}

func (m *SearchLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLogsResponse.Unmarshal(m, b)
}
func (m *SearchLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLogsResponse.Marshal(b, m, deterministic)
}
func (m *SearchLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLogsResponse.Merge(m, src)
}
func (m *SearchLogsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchLogsResponse.Size(m)
}
func (m *SearchLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLogsResponse proto.InternalMessageInfo

func (m *SearchLogsResponse) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *SearchLogsResponse) GetLogs() []*NodeLogsResponse {
	if m != nil {
		return m.Logs
	}
	return nil
}

type GetMetricsRequest struct {
	VersionID            string   `protobuf:"bytes,1,opt,name=versionID,proto3" json:"versionID,omitempty"`
	StartDate            string   `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate              string   `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMetricsRequest) Reset()         { *m = GetMetricsRequest{} }
func (m *GetMetricsRequest) String() string { return proto.CompactTextString(m) }
func (*GetMetricsRequest) ProtoMessage()    {}
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{6}
}

func (m *GetMetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMetricsRequest.Unmarshal(m, b)
}
func (m *GetMetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMetricsRequest.Marshal(b, m, deterministic)
}
func (m *GetMetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetricsRequest.Merge(m, src)
}
func (m *GetMetricsRequest) XXX_Size() int {
	return xxx_messageInfo_GetMetricsRequest.Size(m)
}
func (m *GetMetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetricsRequest proto.InternalMessageInfo

func (m *GetMetricsRequest) GetVersionID() string {
	if m != nil {
		return m.VersionID
	}
	return ""
}

func (m *GetMetricsRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *GetMetricsRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type MetricRow struct {
	Date                 string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	PredictedValue       string   `protobuf:"bytes,3,opt,name=predicted_value,json=predictedValue,proto3" json:"predicted_value,omitempty"`
	TrueValue            string   `protobuf:"bytes,4,opt,name=true_value,json=trueValue,proto3" json:"true_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricRow) Reset()         { *m = MetricRow{} }
func (m *MetricRow) String() string { return proto.CompactTextString(m) }
func (*MetricRow) ProtoMessage()    {}
func (*MetricRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{7}
}

func (m *MetricRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricRow.Unmarshal(m, b)
}
func (m *MetricRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricRow.Marshal(b, m, deterministic)
}
func (m *MetricRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricRow.Merge(m, src)
}
func (m *MetricRow) XXX_Size() int {
	return xxx_messageInfo_MetricRow.Size(m)
}
func (m *MetricRow) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricRow.DiscardUnknown(m)
}

var xxx_messageInfo_MetricRow proto.InternalMessageInfo

func (m *MetricRow) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *MetricRow) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *MetricRow) GetPredictedValue() string {
	if m != nil {
		return m.PredictedValue
	}
	return ""
}

func (m *MetricRow) GetTrueValue() string {
	if m != nil {
		return m.TrueValue
	}
	return ""
}

type GetMetricsResponse struct {
	Metrics              []*MetricRow `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetMetricsResponse) Reset()         { *m = GetMetricsResponse{} }
func (m *GetMetricsResponse) String() string { return proto.CompactTextString(m) }
func (*GetMetricsResponse) ProtoMessage()    {}
func (*GetMetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{8}
}

func (m *GetMetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMetricsResponse.Unmarshal(m, b)
}
func (m *GetMetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMetricsResponse.Marshal(b, m, deterministic)
}
func (m *GetMetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetricsResponse.Merge(m, src)
}
func (m *GetMetricsResponse) XXX_Size() int {
	return xxx_messageInfo_GetMetricsResponse.Size(m)
}
func (m *GetMetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetricsResponse proto.InternalMessageInfo

func (m *GetMetricsResponse) GetMetrics() []*MetricRow {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func init() {
	proto.RegisterType((*NodeLogsRequest)(nil), "monitoring.NodeLogsRequest")
	proto.RegisterType((*NodeLogsResponse)(nil), "monitoring.NodeLogsResponse")
	proto.RegisterType((*NodeStatusRequest)(nil), "monitoring.NodeStatusRequest")
	proto.RegisterType((*NodeStatusResponse)(nil), "monitoring.NodeStatusResponse")
	proto.RegisterType((*SearchLogsRequest)(nil), "monitoring.SearchLogsRequest")
	proto.RegisterType((*SearchLogsResponse)(nil), "monitoring.SearchLogsResponse")
	proto.RegisterType((*GetMetricsRequest)(nil), "monitoring.GetMetricsRequest")
	proto.RegisterType((*MetricRow)(nil), "monitoring.MetricRow")
	proto.RegisterType((*GetMetricsResponse)(nil), "monitoring.GetMetricsResponse")
}

func init() {
	proto.RegisterFile("proto/monitoringpb/monitoring.proto", fileDescriptor_fd072eb3c57cb8f2)
}

var fileDescriptor_fd072eb3c57cb8f2 = []byte{
	// 551 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0xfc, 0x71, 0x93, 0x29, 0x4a, 0xc9, 0xaa, 0x54, 0x56, 0x68, 0xab, 0xca, 0x1c,
	0x28, 0x97, 0xb6, 0x2a, 0xe2, 0x05, 0x50, 0x50, 0x15, 0x95, 0xf4, 0xe0, 0x48, 0x1c, 0x38, 0x80,
	0x5c, 0xef, 0x10, 0x2c, 0x1c, 0xaf, 0xd9, 0x5d, 0x27, 0x27, 0x1e, 0x8f, 0x03, 0x17, 0x9e, 0x09,
	0xed, 0x7a, 0xed, 0x5d, 0x27, 0x2d, 0x87, 0xde, 0xf2, 0x7d, 0xfb, 0x65, 0xc6, 0xf3, 0xf3, 0xac,
	0xe1, 0x55, 0xc1, 0x99, 0x64, 0x97, 0x2b, 0x96, 0xa7, 0x92, 0xf1, 0x34, 0x5f, 0x16, 0xf7, 0x8e,
	0xb8, 0xd0, 0xa7, 0x04, 0xac, 0x13, 0xbe, 0x81, 0x83, 0x3b, 0x46, 0xf1, 0x23, 0x5b, 0x8a, 0x08,
	0x7f, 0x96, 0x28, 0x24, 0x39, 0x02, 0x3f, 0x67, 0x14, 0x67, 0x34, 0xf0, 0xce, 0xbc, 0xf3, 0x61,
	0x64, 0x54, 0xf8, 0xd7, 0x83, 0xe7, 0x36, 0x2b, 0x0a, 0x96, 0x0b, 0x24, 0x23, 0xe8, 0xa4, 0x75,
	0xb0, 0x93, 0x52, 0x42, 0xa0, 0x47, 0x63, 0x89, 0x41, 0x47, 0x3b, 0xfa, 0x37, 0x39, 0x86, 0xe1,
	0x1a, 0xb9, 0x48, 0x59, 0x3e, 0xa3, 0x41, 0x57, 0x1f, 0x58, 0xc3, 0x69, 0xd7, 0x73, 0xdb, 0x91,
	0x43, 0xe8, 0x17, 0x8c, 0xce, 0x68, 0xd0, 0xd7, 0x76, 0x25, 0x48, 0x00, 0x7b, 0x2b, 0x14, 0x22,
	0x5e, 0x62, 0xe0, 0x6b, 0xbf, 0x96, 0x2a, 0x9f, 0xe1, 0x1a, 0xb3, 0x60, 0xaf, 0xca, 0x6b, 0x41,
	0x26, 0x30, 0x50, 0xf5, 0xee, 0xe2, 0x15, 0x06, 0x03, 0x7d, 0xd0, 0xe8, 0xf0, 0x1d, 0x8c, 0xd5,
	0x3c, 0x0b, 0x19, 0xcb, 0xb2, 0x99, 0xfe, 0x0c, 0xf6, 0xcd, 0xb3, 0xe9, 0xff, 0x54, 0x73, 0xb8,
	0x56, 0xf8, 0x05, 0x88, 0xfb, 0x37, 0x03, 0xe2, 0x11, 0x6a, 0xca, 0x17, 0x3a, 0x69, 0x4a, 0x19,
	0xe5, 0x0e, 0xd2, 0x6d, 0x0d, 0x12, 0xfe, 0xf1, 0x60, 0xbc, 0xc0, 0x98, 0x27, 0xdf, 0xb7, 0xde,
	0x8a, 0xd0, 0x66, 0x5d, 0xbf, 0x52, 0x0a, 0xae, 0x90, 0x31, 0x97, 0x53, 0x4b, 0xdd, 0x1a, 0xaa,
	0x0b, 0xe6, 0x54, 0x9f, 0x99, 0x2e, 0x46, 0x92, 0x53, 0x80, 0x0d, 0xe3, 0x3f, 0xbe, 0x65, 0x6c,
	0x33, 0x9b, 0x1a, 0xf4, 0x8e, 0xd3, 0xcc, 0x33, 0x35, 0xfc, 0x8d, 0xb2, 0x98, 0x7d, 0x17, 0xf3,
	0x11, 0xf8, 0x49, 0xc9, 0x05, 0xe3, 0x86, 0xbe, 0x51, 0x8a, 0x95, 0x3b, 0x8a, 0x65, 0x65, 0xd2,
	0x9e, 0x9b, 0x26, 0x57, 0xd0, 0xcb, 0xd8, 0x52, 0x91, 0xea, 0x9e, 0xef, 0x5f, 0x1f, 0x5f, 0x38,
	0x9b, 0xbb, 0xbd, 0x78, 0x91, 0x4e, 0x86, 0x29, 0x8c, 0x6f, 0x50, 0xce, 0x51, 0xf2, 0x34, 0x69,
	0x50, 0x39, 0xfb, 0x36, 0x35, 0x1d, 0xac, 0xf1, 0x54, 0x60, 0xe1, 0x2f, 0x18, 0x56, 0x7d, 0x22,
	0xb6, 0x69, 0xd6, 0xdc, 0x73, 0xd6, 0xfc, 0x10, 0xfa, 0xc8, 0x39, 0xe3, 0xa6, 0x68, 0x25, 0xc8,
	0x6b, 0x38, 0x28, 0x38, 0xd2, 0x34, 0x91, 0x48, 0xbf, 0xae, 0xe3, 0xac, 0xac, 0x0b, 0x8f, 0x1a,
	0xfb, 0x93, 0x72, 0xc9, 0x09, 0x80, 0xe4, 0x25, 0x9a, 0x4c, 0xf5, 0x42, 0x86, 0xca, 0xd1, 0xc7,
	0xe1, 0x07, 0x20, 0xee, 0xa4, 0x86, 0xe4, 0xa5, 0xda, 0x22, 0x6d, 0x05, 0x9e, 0x86, 0xf6, 0xc2,
	0x85, 0xd6, 0x3c, 0x6f, 0x54, 0xa7, 0xae, 0x7f, 0x77, 0x60, 0x3c, 0x6f, 0x12, 0x0b, 0xe4, 0xeb,
	0x34, 0x41, 0x72, 0x03, 0x83, 0x1a, 0x30, 0x79, 0xf9, 0x30, 0x76, 0x8d, 0x76, 0xf2, 0xdf, 0x77,
	0x72, 0xe5, 0x91, 0x39, 0x80, 0xbd, 0x1b, 0xe4, 0x64, 0x3b, 0xdd, 0xba, 0x6a, 0x93, 0xd3, 0xc7,
	0x8e, 0x9b, 0x72, 0xb7, 0x00, 0x76, 0x7d, 0xda, 0xe5, 0x76, 0x6e, 0x48, 0xbb, 0xdc, 0x03, 0x5b,
	0x77, 0x0b, 0x60, 0x09, 0xb6, 0x8b, 0xed, 0xec, 0x50, 0xbb, 0xd8, 0x2e, 0xf8, 0xf7, 0xa3, 0xcf,
	0xcf, 0xdc, 0x8f, 0xec, 0xbd, 0xaf, 0x3f, 0xad, 0x6f, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xa4,
	0x62, 0xdf, 0xc4, 0x81, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitoringServiceClient is the client API for MonitoringService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitoringServiceClient interface {
	NodeLogs(ctx context.Context, in *NodeLogsRequest, opts ...grpc.CallOption) (MonitoringService_NodeLogsClient, error)
	NodeStatus(ctx context.Context, in *NodeStatusRequest, opts ...grpc.CallOption) (MonitoringService_NodeStatusClient, error)
	SearchLogs(ctx context.Context, in *SearchLogsRequest, opts ...grpc.CallOption) (*SearchLogsResponse, error)
	GetMetrics(ctx context.Context, in *GetMetricsRequest, opts ...grpc.CallOption) (*GetMetricsResponse, error)
}

type monitoringServiceClient struct {
	cc *grpc.ClientConn
}

func NewMonitoringServiceClient(cc *grpc.ClientConn) MonitoringServiceClient {
	return &monitoringServiceClient{cc}
}

func (c *monitoringServiceClient) NodeLogs(ctx context.Context, in *NodeLogsRequest, opts ...grpc.CallOption) (MonitoringService_NodeLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MonitoringService_serviceDesc.Streams[0], "/monitoring.MonitoringService/NodeLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &monitoringServiceNodeLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MonitoringService_NodeLogsClient interface {
	Recv() (*NodeLogsResponse, error)
	grpc.ClientStream
}

type monitoringServiceNodeLogsClient struct {
	grpc.ClientStream
}

func (x *monitoringServiceNodeLogsClient) Recv() (*NodeLogsResponse, error) {
	m := new(NodeLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *monitoringServiceClient) NodeStatus(ctx context.Context, in *NodeStatusRequest, opts ...grpc.CallOption) (MonitoringService_NodeStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MonitoringService_serviceDesc.Streams[1], "/monitoring.MonitoringService/NodeStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &monitoringServiceNodeStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MonitoringService_NodeStatusClient interface {
	Recv() (*NodeStatusResponse, error)
	grpc.ClientStream
}

type monitoringServiceNodeStatusClient struct {
	grpc.ClientStream
}

func (x *monitoringServiceNodeStatusClient) Recv() (*NodeStatusResponse, error) {
	m := new(NodeStatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *monitoringServiceClient) SearchLogs(ctx context.Context, in *SearchLogsRequest, opts ...grpc.CallOption) (*SearchLogsResponse, error) {
	out := new(SearchLogsResponse)
	err := c.cc.Invoke(ctx, "/monitoring.MonitoringService/SearchLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *monitoringServiceClient) GetMetrics(ctx context.Context, in *GetMetricsRequest, opts ...grpc.CallOption) (*GetMetricsResponse, error) {
	out := new(GetMetricsResponse)
	err := c.cc.Invoke(ctx, "/monitoring.MonitoringService/GetMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitoringServiceServer is the server API for MonitoringService service.
type MonitoringServiceServer interface {
	NodeLogs(*NodeLogsRequest, MonitoringService_NodeLogsServer) error
	NodeStatus(*NodeStatusRequest, MonitoringService_NodeStatusServer) error
	SearchLogs(context.Context, *SearchLogsRequest) (*SearchLogsResponse, error)
	GetMetrics(context.Context, *GetMetricsRequest) (*GetMetricsResponse, error)
}

// UnimplementedMonitoringServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMonitoringServiceServer struct {
}

func (*UnimplementedMonitoringServiceServer) NodeLogs(req *NodeLogsRequest, srv MonitoringService_NodeLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method NodeLogs not implemented")
}
func (*UnimplementedMonitoringServiceServer) NodeStatus(req *NodeStatusRequest, srv MonitoringService_NodeStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method NodeStatus not implemented")
}
func (*UnimplementedMonitoringServiceServer) SearchLogs(ctx context.Context, req *SearchLogsRequest) (*SearchLogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchLogs not implemented")
}
func (*UnimplementedMonitoringServiceServer) GetMetrics(ctx context.Context, req *GetMetricsRequest) (*GetMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetrics not implemented")
}

func RegisterMonitoringServiceServer(s *grpc.Server, srv MonitoringServiceServer) {
	s.RegisterService(&_MonitoringService_serviceDesc, srv)
}

func _MonitoringService_NodeLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NodeLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MonitoringServiceServer).NodeLogs(m, &monitoringServiceNodeLogsServer{stream})
}

type MonitoringService_NodeLogsServer interface {
	Send(*NodeLogsResponse) error
	grpc.ServerStream
}

type monitoringServiceNodeLogsServer struct {
	grpc.ServerStream
}

func (x *monitoringServiceNodeLogsServer) Send(m *NodeLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MonitoringService_NodeStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NodeStatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MonitoringServiceServer).NodeStatus(m, &monitoringServiceNodeStatusServer{stream})
}

type MonitoringService_NodeStatusServer interface {
	Send(*NodeStatusResponse) error
	grpc.ServerStream
}

type monitoringServiceNodeStatusServer struct {
	grpc.ServerStream
}

func (x *monitoringServiceNodeStatusServer) Send(m *NodeStatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MonitoringService_SearchLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitoringServiceServer).SearchLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monitoring.MonitoringService/SearchLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitoringServiceServer).SearchLogs(ctx, req.(*SearchLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MonitoringService_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitoringServiceServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monitoring.MonitoringService/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitoringServiceServer).GetMetrics(ctx, req.(*GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonitoringService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monitoring.MonitoringService",
	HandlerType: (*MonitoringServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchLogs",
			Handler:    _MonitoringService_SearchLogs_Handler,
		},
		{
			MethodName: "GetMetrics",
			Handler:    _MonitoringService_GetMetrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NodeLogs",
			Handler:       _MonitoringService_NodeLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NodeStatus",
			Handler:       _MonitoringService_NodeStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/monitoringpb/monitoring.proto",
}
