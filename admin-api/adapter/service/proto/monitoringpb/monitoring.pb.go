// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/monitoringpb/monitoring.proto

package monitoringpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeLogsRequest struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeLogsRequest) Reset()         { *m = NodeLogsRequest{} }
func (m *NodeLogsRequest) String() string { return proto.CompactTextString(m) }
func (*NodeLogsRequest) ProtoMessage()    {}
func (*NodeLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{0}
}

func (m *NodeLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeLogsRequest.Unmarshal(m, b)
}
func (m *NodeLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeLogsRequest.Marshal(b, m, deterministic)
}
func (m *NodeLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeLogsRequest.Merge(m, src)
}
func (m *NodeLogsRequest) XXX_Size() int {
	return xxx_messageInfo_NodeLogsRequest.Size(m)
}
func (m *NodeLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeLogsRequest proto.InternalMessageInfo

func (m *NodeLogsRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type NodeLogsResponse struct {
	Date                 string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	VersionId            string   `protobuf:"bytes,3,opt,name=versionId,proto3" json:"versionId,omitempty"`
	NodeId               string   `protobuf:"bytes,4,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	PodId                string   `protobuf:"bytes,5,opt,name=podId,proto3" json:"podId,omitempty"`
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Level                string   `protobuf:"bytes,7,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeLogsResponse) Reset()         { *m = NodeLogsResponse{} }
func (m *NodeLogsResponse) String() string { return proto.CompactTextString(m) }
func (*NodeLogsResponse) ProtoMessage()    {}
func (*NodeLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{1}
}

func (m *NodeLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeLogsResponse.Unmarshal(m, b)
}
func (m *NodeLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeLogsResponse.Marshal(b, m, deterministic)
}
func (m *NodeLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeLogsResponse.Merge(m, src)
}
func (m *NodeLogsResponse) XXX_Size() int {
	return xxx_messageInfo_NodeLogsResponse.Size(m)
}
func (m *NodeLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeLogsResponse proto.InternalMessageInfo

func (m *NodeLogsResponse) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *NodeLogsResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NodeLogsResponse) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *NodeLogsResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeLogsResponse) GetPodId() string {
	if m != nil {
		return m.PodId
	}
	return ""
}

func (m *NodeLogsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *NodeLogsResponse) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

type NodeStatusRequest struct {
	VersionName          string   `protobuf:"bytes,2,opt,name=versionName,proto3" json:"versionName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStatusRequest) Reset()         { *m = NodeStatusRequest{} }
func (m *NodeStatusRequest) String() string { return proto.CompactTextString(m) }
func (*NodeStatusRequest) ProtoMessage()    {}
func (*NodeStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{2}
}

func (m *NodeStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatusRequest.Unmarshal(m, b)
}
func (m *NodeStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatusRequest.Marshal(b, m, deterministic)
}
func (m *NodeStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatusRequest.Merge(m, src)
}
func (m *NodeStatusRequest) XXX_Size() int {
	return xxx_messageInfo_NodeStatusRequest.Size(m)
}
func (m *NodeStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatusRequest proto.InternalMessageInfo

func (m *NodeStatusRequest) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

type NodeStatusResponse struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStatusResponse) Reset()         { *m = NodeStatusResponse{} }
func (m *NodeStatusResponse) String() string { return proto.CompactTextString(m) }
func (*NodeStatusResponse) ProtoMessage()    {}
func (*NodeStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd072eb3c57cb8f2, []int{3}
}

func (m *NodeStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatusResponse.Unmarshal(m, b)
}
func (m *NodeStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatusResponse.Marshal(b, m, deterministic)
}
func (m *NodeStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatusResponse.Merge(m, src)
}
func (m *NodeStatusResponse) XXX_Size() int {
	return xxx_messageInfo_NodeStatusResponse.Size(m)
}
func (m *NodeStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatusResponse proto.InternalMessageInfo

func (m *NodeStatusResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NodeStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*NodeLogsRequest)(nil), "monitoring.NodeLogsRequest")
	proto.RegisterType((*NodeLogsResponse)(nil), "monitoring.NodeLogsResponse")
	proto.RegisterType((*NodeStatusRequest)(nil), "monitoring.NodeStatusRequest")
	proto.RegisterType((*NodeStatusResponse)(nil), "monitoring.NodeStatusResponse")
}

func init() {
	proto.RegisterFile("proto/monitoringpb/monitoring.proto", fileDescriptor_fd072eb3c57cb8f2)
}

var fileDescriptor_fd072eb3c57cb8f2 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x35, 0xda, 0xa6, 0x76, 0x14, 0xb5, 0x83, 0x94, 0xa5, 0x56, 0x29, 0xf1, 0xa2, 0x97, 0x2a,
	0x8a, 0x7f, 0xc0, 0x5b, 0xc0, 0x56, 0x68, 0x6f, 0x1e, 0x84, 0xd4, 0x1d, 0x4a, 0xa0, 0xc9, 0xc6,
	0xec, 0x36, 0xe0, 0xaf, 0xf2, 0xe6, 0xef, 0x93, 0xfd, 0x48, 0xb3, 0x2d, 0x7a, 0xdb, 0xf7, 0xe6,
	0xed, 0xce, 0x7b, 0x33, 0x0b, 0xd7, 0x45, 0x29, 0x94, 0xb8, 0xcb, 0x44, 0x9e, 0x2a, 0x51, 0xa6,
	0xf9, 0xb2, 0x58, 0x78, 0x60, 0x6c, 0xaa, 0x08, 0x0d, 0x13, 0xdd, 0xc2, 0xe9, 0x54, 0x70, 0x7a,
	0x11, 0x4b, 0x39, 0xa3, 0xcf, 0x35, 0x49, 0x85, 0x7d, 0x08, 0x73, 0xc1, 0x29, 0xe6, 0x2c, 0x18,
	0x05, 0x37, 0xdd, 0x99, 0x43, 0xd1, 0x4f, 0x00, 0x67, 0x8d, 0x56, 0x16, 0x22, 0x97, 0x84, 0x08,
	0x2d, 0x9e, 0x28, 0x72, 0x52, 0x73, 0xd6, 0x9c, 0xfa, 0x2a, 0x88, 0xed, 0x5b, 0x4e, 0x9f, 0x71,
	0x08, 0xdd, 0x8a, 0x4a, 0x99, 0x8a, 0x3c, 0xe6, 0xec, 0xc0, 0x14, 0x1a, 0xc2, 0x6b, 0xd9, 0xf2,
	0x5b, 0xe2, 0x39, 0xb4, 0x0b, 0xc1, 0x63, 0xce, 0xda, 0x86, 0xb6, 0x00, 0x19, 0x74, 0x32, 0x92,
	0x32, 0x59, 0x12, 0x0b, 0x0d, 0x5f, 0x43, 0xad, 0x5f, 0x51, 0x45, 0x2b, 0xd6, 0xb1, 0x7a, 0x03,
	0xa2, 0x27, 0xe8, 0x69, 0xdf, 0x73, 0x95, 0xa8, 0xf5, 0x26, 0xe5, 0x08, 0x8e, 0x5c, 0xff, 0x69,
	0x92, 0xd5, 0x5e, 0x7d, 0x2a, 0x7a, 0x07, 0xf4, 0xaf, 0xb9, 0xc0, 0x7d, 0x08, 0xa7, 0x5b, 0xd3,
	0xb1, 0x48, 0xf3, 0x56, 0xe9, 0x9e, 0x72, 0x48, 0x9b, 0x9d, 0x38, 0xb3, 0x36, 0x76, 0x0d, 0x1f,
	0xbe, 0x03, 0xe8, 0x4d, 0x36, 0x9b, 0x98, 0x53, 0x59, 0xa5, 0x1f, 0x84, 0x31, 0x1c, 0xd6, 0x43,
	0xc6, 0x8b, 0xb1, 0xb7, 0xbb, 0x9d, 0x35, 0x0d, 0x86, 0x7f, 0x17, 0xad, 0xcd, 0x68, 0xef, 0x3e,
	0xc0, 0x57, 0x80, 0x26, 0x00, 0x5e, 0xee, 0xea, 0xb7, 0xe6, 0x31, 0xb8, 0xfa, 0xaf, 0xdc, 0x3c,
	0xf8, 0x7c, 0xf2, 0x76, 0xec, 0xff, 0xac, 0x45, 0x68, 0xfe, 0xd3, 0xe3, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xbb, 0x5c, 0xe5, 0xbd, 0x76, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitoringServiceClient is the client API for MonitoringService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitoringServiceClient interface {
	NodeLogs(ctx context.Context, in *NodeLogsRequest, opts ...grpc.CallOption) (MonitoringService_NodeLogsClient, error)
	NodeStatus(ctx context.Context, in *NodeStatusRequest, opts ...grpc.CallOption) (MonitoringService_NodeStatusClient, error)
}

type monitoringServiceClient struct {
	cc *grpc.ClientConn
}

func NewMonitoringServiceClient(cc *grpc.ClientConn) MonitoringServiceClient {
	return &monitoringServiceClient{cc}
}

func (c *monitoringServiceClient) NodeLogs(ctx context.Context, in *NodeLogsRequest, opts ...grpc.CallOption) (MonitoringService_NodeLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MonitoringService_serviceDesc.Streams[0], "/monitoring.MonitoringService/NodeLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &monitoringServiceNodeLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MonitoringService_NodeLogsClient interface {
	Recv() (*NodeLogsResponse, error)
	grpc.ClientStream
}

type monitoringServiceNodeLogsClient struct {
	grpc.ClientStream
}

func (x *monitoringServiceNodeLogsClient) Recv() (*NodeLogsResponse, error) {
	m := new(NodeLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *monitoringServiceClient) NodeStatus(ctx context.Context, in *NodeStatusRequest, opts ...grpc.CallOption) (MonitoringService_NodeStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MonitoringService_serviceDesc.Streams[1], "/monitoring.MonitoringService/NodeStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &monitoringServiceNodeStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MonitoringService_NodeStatusClient interface {
	Recv() (*NodeStatusResponse, error)
	grpc.ClientStream
}

type monitoringServiceNodeStatusClient struct {
	grpc.ClientStream
}

func (x *monitoringServiceNodeStatusClient) Recv() (*NodeStatusResponse, error) {
	m := new(NodeStatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MonitoringServiceServer is the server API for MonitoringService service.
type MonitoringServiceServer interface {
	NodeLogs(*NodeLogsRequest, MonitoringService_NodeLogsServer) error
	NodeStatus(*NodeStatusRequest, MonitoringService_NodeStatusServer) error
}

// UnimplementedMonitoringServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMonitoringServiceServer struct {
}

func (*UnimplementedMonitoringServiceServer) NodeLogs(req *NodeLogsRequest, srv MonitoringService_NodeLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method NodeLogs not implemented")
}
func (*UnimplementedMonitoringServiceServer) NodeStatus(req *NodeStatusRequest, srv MonitoringService_NodeStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method NodeStatus not implemented")
}

func RegisterMonitoringServiceServer(s *grpc.Server, srv MonitoringServiceServer) {
	s.RegisterService(&_MonitoringService_serviceDesc, srv)
}

func _MonitoringService_NodeLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NodeLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MonitoringServiceServer).NodeLogs(m, &monitoringServiceNodeLogsServer{stream})
}

type MonitoringService_NodeLogsServer interface {
	Send(*NodeLogsResponse) error
	grpc.ServerStream
}

type monitoringServiceNodeLogsServer struct {
	grpc.ServerStream
}

func (x *monitoringServiceNodeLogsServer) Send(m *NodeLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MonitoringService_NodeStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NodeStatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MonitoringServiceServer).NodeStatus(m, &monitoringServiceNodeStatusServer{stream})
}

type MonitoringService_NodeStatusServer interface {
	Send(*NodeStatusResponse) error
	grpc.ServerStream
}

type monitoringServiceNodeStatusServer struct {
	grpc.ServerStream
}

func (x *monitoringServiceNodeStatusServer) Send(m *NodeStatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MonitoringService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monitoring.MonitoringService",
	HandlerType: (*MonitoringServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NodeLogs",
			Handler:       _MonitoringService_NodeLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NodeStatus",
			Handler:       _MonitoringService_NodeStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/monitoringpb/monitoring.proto",
}
