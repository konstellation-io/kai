// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtimepb/runtime.proto

package runtimepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Version struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeployVersionRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployVersionRequest) Reset()         { *m = DeployVersionRequest{} }
func (m *DeployVersionRequest) String() string { return proto.CompactTextString(m) }
func (*DeployVersionRequest) ProtoMessage()    {}
func (*DeployVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{1}
}

func (m *DeployVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployVersionRequest.Unmarshal(m, b)
}
func (m *DeployVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployVersionRequest.Marshal(b, m, deterministic)
}
func (m *DeployVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployVersionRequest.Merge(m, src)
}
func (m *DeployVersionRequest) XXX_Size() int {
	return xxx_messageInfo_DeployVersionRequest.Size(m)
}
func (m *DeployVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployVersionRequest proto.InternalMessageInfo

func (m *DeployVersionRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type DeployVersionResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployVersionResponse) Reset()         { *m = DeployVersionResponse{} }
func (m *DeployVersionResponse) String() string { return proto.CompactTextString(m) }
func (*DeployVersionResponse) ProtoMessage()    {}
func (*DeployVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{2}
}

func (m *DeployVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployVersionResponse.Unmarshal(m, b)
}
func (m *DeployVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployVersionResponse.Marshal(b, m, deterministic)
}
func (m *DeployVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployVersionResponse.Merge(m, src)
}
func (m *DeployVersionResponse) XXX_Size() int {
	return xxx_messageInfo_DeployVersionResponse.Size(m)
}
func (m *DeployVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeployVersionResponse proto.InternalMessageInfo

func (m *DeployVersionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DeployVersionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ActivateVersionRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateVersionRequest) Reset()         { *m = ActivateVersionRequest{} }
func (m *ActivateVersionRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateVersionRequest) ProtoMessage()    {}
func (*ActivateVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{3}
}

func (m *ActivateVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateVersionRequest.Unmarshal(m, b)
}
func (m *ActivateVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateVersionRequest.Marshal(b, m, deterministic)
}
func (m *ActivateVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateVersionRequest.Merge(m, src)
}
func (m *ActivateVersionRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateVersionRequest.Size(m)
}
func (m *ActivateVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateVersionRequest proto.InternalMessageInfo

func (m *ActivateVersionRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type ActivateVersionResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateVersionResponse) Reset()         { *m = ActivateVersionResponse{} }
func (m *ActivateVersionResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateVersionResponse) ProtoMessage()    {}
func (*ActivateVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{4}
}

func (m *ActivateVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateVersionResponse.Unmarshal(m, b)
}
func (m *ActivateVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateVersionResponse.Marshal(b, m, deterministic)
}
func (m *ActivateVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateVersionResponse.Merge(m, src)
}
func (m *ActivateVersionResponse) XXX_Size() int {
	return xxx_messageInfo_ActivateVersionResponse.Size(m)
}
func (m *ActivateVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateVersionResponse proto.InternalMessageInfo

func (m *ActivateVersionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ActivateVersionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CheckVersionIsCreatedRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckVersionIsCreatedRequest) Reset()         { *m = CheckVersionIsCreatedRequest{} }
func (m *CheckVersionIsCreatedRequest) String() string { return proto.CompactTextString(m) }
func (*CheckVersionIsCreatedRequest) ProtoMessage()    {}
func (*CheckVersionIsCreatedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{5}
}

func (m *CheckVersionIsCreatedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckVersionIsCreatedRequest.Unmarshal(m, b)
}
func (m *CheckVersionIsCreatedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckVersionIsCreatedRequest.Marshal(b, m, deterministic)
}
func (m *CheckVersionIsCreatedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckVersionIsCreatedRequest.Merge(m, src)
}
func (m *CheckVersionIsCreatedRequest) XXX_Size() int {
	return xxx_messageInfo_CheckVersionIsCreatedRequest.Size(m)
}
func (m *CheckVersionIsCreatedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckVersionIsCreatedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckVersionIsCreatedRequest proto.InternalMessageInfo

func (m *CheckVersionIsCreatedRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type CheckVersionIsCreatedResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckVersionIsCreatedResponse) Reset()         { *m = CheckVersionIsCreatedResponse{} }
func (m *CheckVersionIsCreatedResponse) String() string { return proto.CompactTextString(m) }
func (*CheckVersionIsCreatedResponse) ProtoMessage()    {}
func (*CheckVersionIsCreatedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0e5095094a8d27f, []int{6}
}

func (m *CheckVersionIsCreatedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckVersionIsCreatedResponse.Unmarshal(m, b)
}
func (m *CheckVersionIsCreatedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckVersionIsCreatedResponse.Marshal(b, m, deterministic)
}
func (m *CheckVersionIsCreatedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckVersionIsCreatedResponse.Merge(m, src)
}
func (m *CheckVersionIsCreatedResponse) XXX_Size() int {
	return xxx_messageInfo_CheckVersionIsCreatedResponse.Size(m)
}
func (m *CheckVersionIsCreatedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckVersionIsCreatedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckVersionIsCreatedResponse proto.InternalMessageInfo

func (m *CheckVersionIsCreatedResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CheckVersionIsCreatedResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Version)(nil), "runtime.Version")
	proto.RegisterType((*DeployVersionRequest)(nil), "runtime.DeployVersionRequest")
	proto.RegisterType((*DeployVersionResponse)(nil), "runtime.DeployVersionResponse")
	proto.RegisterType((*ActivateVersionRequest)(nil), "runtime.ActivateVersionRequest")
	proto.RegisterType((*ActivateVersionResponse)(nil), "runtime.ActivateVersionResponse")
	proto.RegisterType((*CheckVersionIsCreatedRequest)(nil), "runtime.CheckVersionIsCreatedRequest")
	proto.RegisterType((*CheckVersionIsCreatedResponse)(nil), "runtime.CheckVersionIsCreatedResponse")
}

func init() { proto.RegisterFile("runtimepb/runtime.proto", fileDescriptor_d0e5095094a8d27f) }

var fileDescriptor_d0e5095094a8d27f = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc7, 0x6d, 0x11, 0x63, 0xa7, 0xf8, 0xc1, 0x60, 0x6d, 0x08, 0x46, 0x4b, 0x40, 0x11, 0x0f,
	0x15, 0xea, 0x13, 0xd8, 0xf6, 0xa2, 0x22, 0x48, 0x0a, 0x3d, 0x78, 0x4b, 0xe3, 0x60, 0x83, 0xe6,
	0xc3, 0xcc, 0x26, 0xe0, 0xfb, 0xf8, 0xa0, 0xe2, 0x76, 0x77, 0xc1, 0x9a, 0x58, 0x68, 0x6f, 0x3b,
	0x3b, 0xff, 0xf9, 0xcf, 0x8f, 0x19, 0x06, 0xba, 0x79, 0x91, 0x88, 0x28, 0xa6, 0x6c, 0x76, 0xad,
	0x5e, 0xfd, 0x2c, 0x4f, 0x45, 0x8a, 0x96, 0x0a, 0x3d, 0x17, 0xac, 0x29, 0xe5, 0x1c, 0xa5, 0x09,
	0x22, 0x6c, 0x27, 0x41, 0x4c, 0x76, 0xa3, 0xd7, 0xb8, 0x6c, 0xf9, 0xf2, 0xed, 0x0d, 0xe1, 0x68,
	0x4c, 0xd9, 0x7b, 0xfa, 0xa9, 0x44, 0x3e, 0x7d, 0x14, 0xc4, 0x02, 0xaf, 0xc0, 0x2a, 0x17, 0x3f,
	0x52, 0xde, 0x1e, 0x1c, 0xf6, 0x75, 0x03, 0xad, 0xd4, 0x02, 0xef, 0x01, 0x3a, 0x4b, 0x1e, 0x9c,
	0xa5, 0x09, 0x13, 0xda, 0x60, 0x71, 0x11, 0x86, 0xc4, 0x2c, 0x4d, 0x76, 0x7d, 0x1d, 0xfe, 0x64,
	0x62, 0x62, 0x0e, 0x5e, 0xc9, 0x6e, 0x4a, 0x1a, 0x1d, 0x7a, 0x63, 0x38, 0xbe, 0x0d, 0x45, 0x54,
	0x06, 0x82, 0x36, 0x40, 0x7a, 0x84, 0xee, 0x1f, 0x97, 0x0d, 0xa0, 0xee, 0xe1, 0x64, 0x34, 0xa7,
	0xf0, 0x4d, 0x79, 0xdd, 0xf1, 0x28, 0xa7, 0x40, 0xd0, 0xcb, 0x3a, 0x68, 0x13, 0x70, 0x6b, 0xbc,
	0xd6, 0x07, 0x1c, 0x7c, 0x35, 0x61, 0x5f, 0x19, 0x4e, 0x28, 0x2f, 0xa3, 0x90, 0xf0, 0x09, 0xf6,
	0x7e, 0x6d, 0x05, 0x5d, 0xc3, 0x54, 0xb5, 0x71, 0xe7, 0xb4, 0x2e, 0xbd, 0xc0, 0xf2, 0xb6, 0x70,
	0x0a, 0x07, 0x4b, 0x43, 0xc5, 0x33, 0x53, 0x54, 0xbd, 0x34, 0xa7, 0x57, 0x2f, 0x30, 0xbe, 0x73,
	0xe8, 0x54, 0x4e, 0x04, 0xcf, 0x4d, 0xf1, 0x7f, 0xd3, 0x77, 0x2e, 0x56, 0xc9, 0x74, 0xa7, 0x61,
	0xfb, 0xb9, 0x65, 0x0e, 0x66, 0xb6, 0x23, 0x2f, 0xe5, 0xe6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x1a,
	0xe1, 0x41, 0x25, 0x44, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VersionServiceClient is the client API for VersionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VersionServiceClient interface {
	DeployVersion(ctx context.Context, in *DeployVersionRequest, opts ...grpc.CallOption) (*DeployVersionResponse, error)
	ActivateVersion(ctx context.Context, in *ActivateVersionRequest, opts ...grpc.CallOption) (*ActivateVersionResponse, error)
	CheckVersionIsCreated(ctx context.Context, in *CheckVersionIsCreatedRequest, opts ...grpc.CallOption) (*CheckVersionIsCreatedResponse, error)
}

type versionServiceClient struct {
	cc *grpc.ClientConn
}

func NewVersionServiceClient(cc *grpc.ClientConn) VersionServiceClient {
	return &versionServiceClient{cc}
}

func (c *versionServiceClient) DeployVersion(ctx context.Context, in *DeployVersionRequest, opts ...grpc.CallOption) (*DeployVersionResponse, error) {
	out := new(DeployVersionResponse)
	err := c.cc.Invoke(ctx, "/runtime.VersionService/DeployVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versionServiceClient) ActivateVersion(ctx context.Context, in *ActivateVersionRequest, opts ...grpc.CallOption) (*ActivateVersionResponse, error) {
	out := new(ActivateVersionResponse)
	err := c.cc.Invoke(ctx, "/runtime.VersionService/ActivateVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versionServiceClient) CheckVersionIsCreated(ctx context.Context, in *CheckVersionIsCreatedRequest, opts ...grpc.CallOption) (*CheckVersionIsCreatedResponse, error) {
	out := new(CheckVersionIsCreatedResponse)
	err := c.cc.Invoke(ctx, "/runtime.VersionService/CheckVersionIsCreated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VersionServiceServer is the server API for VersionService service.
type VersionServiceServer interface {
	DeployVersion(context.Context, *DeployVersionRequest) (*DeployVersionResponse, error)
	ActivateVersion(context.Context, *ActivateVersionRequest) (*ActivateVersionResponse, error)
	CheckVersionIsCreated(context.Context, *CheckVersionIsCreatedRequest) (*CheckVersionIsCreatedResponse, error)
}

// UnimplementedVersionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVersionServiceServer struct {
}

func (*UnimplementedVersionServiceServer) DeployVersion(ctx context.Context, req *DeployVersionRequest) (*DeployVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployVersion not implemented")
}
func (*UnimplementedVersionServiceServer) ActivateVersion(ctx context.Context, req *ActivateVersionRequest) (*ActivateVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateVersion not implemented")
}
func (*UnimplementedVersionServiceServer) CheckVersionIsCreated(ctx context.Context, req *CheckVersionIsCreatedRequest) (*CheckVersionIsCreatedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckVersionIsCreated not implemented")
}

func RegisterVersionServiceServer(s *grpc.Server, srv VersionServiceServer) {
	s.RegisterService(&_VersionService_serviceDesc, srv)
}

func _VersionService_DeployVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServiceServer).DeployVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.VersionService/DeployVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServiceServer).DeployVersion(ctx, req.(*DeployVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersionService_ActivateVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServiceServer).ActivateVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.VersionService/ActivateVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServiceServer).ActivateVersion(ctx, req.(*ActivateVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersionService_CheckVersionIsCreated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckVersionIsCreatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServiceServer).CheckVersionIsCreated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.VersionService/CheckVersionIsCreated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServiceServer).CheckVersionIsCreated(ctx, req.(*CheckVersionIsCreatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VersionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "runtime.VersionService",
	HandlerType: (*VersionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeployVersion",
			Handler:    _VersionService_DeployVersion_Handler,
		},
		{
			MethodName: "ActivateVersion",
			Handler:    _VersionService_ActivateVersion_Handler,
		},
		{
			MethodName: "CheckVersionIsCreated",
			Handler:    _VersionService_CheckVersionIsCreated_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "runtimepb/runtime.proto",
}
