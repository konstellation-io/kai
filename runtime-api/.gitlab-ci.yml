test-runtime-api:
  stage: test
  image: golang:1.13
  script:
    - cd runtime-api
    - go get -u github.com/jstemmer/go-junit-report
    - go test ./... -cover -v -coverprofile=runtime-api-coverage.out 2>&1 | tee -a report.out
    - cat report.out | go-junit-report > runtime-api-report.xml
  coverage: /coverage:\s(\d+(?:\.\d+)?%)/
  artifacts:
    paths:
      - runtime-api/runtime-api-coverage.out
    reports:
      junit: runtime-api/runtime-api-report.xml
  only:
    refs:
      - merge_requests
      - master
    changes:
      - runtime-api/**/*

code-quality-runtime-api:
  extends: .code-quality
  variables:
    COMPONENT_PATH: runtime-api
  only:
    refs:
      - merge_requests
    changes:
      - runtime-api/**/*

sonar-runtime-api:
  extends: .sonar-scanner
  variables:
    SONAR_TOKEN: $SONAR_TOKEN_RUNTIME_API
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/runtime-api/.sonar"
    COMPONENT_PATH: runtime-api
    GIT_DEPTH: "0"
  only:
    changes:
      - runtime-api/**/*

release-runtime-api:
  stage: semantic-release
  image: node:10
  before_script:
    - npm install --prefix runtime-api
  script:
    - cd runtime-api && npx semantic-release -e semantic-release-monorepo
  only:
    refs:
      - master
    changes:
      - runtime-api/**/*
      - .gitlab-ci.yml

publish-runtime-api-image:
  stage: publish-image
  image: docker:18-git
  services:
    - docker:18-dind
  variables:
    IMAGE_PROJECT_NAME: "konstellation/kre-runtime-api"
    DOCKER_USER: $DOCKER_USER
    DOCKER_PASS: $DOCKER_PASS
  before_script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - TAG=${CI_COMMIT_TAG#runtime-api-v}
    - docker build -t $IMAGE_PROJECT_NAME:$TAG runtime-api
    - docker tag $IMAGE_PROJECT_NAME:$TAG $IMAGE_PROJECT_NAME:latest
    - docker push $IMAGE_PROJECT_NAME:$TAG
    - docker push $IMAGE_PROJECT_NAME:latest

  only:
    refs:
      - /^runtime-api-v\d*.\d*.\d*$/
