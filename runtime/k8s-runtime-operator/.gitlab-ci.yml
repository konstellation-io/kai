release-k8s-runtime-operator:
  stage: semantic-release
  image: node:10
  before_script:
    - npm install --prefix runtime/k8s-runtime-operator
  script:
    - cd runtime/k8s-runtime-operator && npx semantic-release
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
      changes:
      - runtime/k8s-runtime-operator/**/*
      - .gitlab-ci.yml

publish-k8s-runtime-operator-image:
  stage: publish-image
  image: docker:19
  services:
    - name: docker:19.03.6-dind
      command: ["--experimental"]

  variables:
    SDK_RELEASE_VERSION: v0.15.1
    HELM_VERSION: v3.0.3
    IMAGE_PROJECT_NAME: "konstellation/kre-k8s-runtime-operator"
    DOCKER_USER: $DOCKER_USER
    DOCKER_PASS: $DOCKER_PASS
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
    DOCKER_CLI_EXPERIMENTAL: enabled
    BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
    BUILDX_BUILDER: multiarch
    BUILDX_PLATFORM: "linux/amd64,linux/arm64"
  before_script:
    - cd runtime/k8s-runtime-operator
    - wget -q https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm
    - chmod +x /usr/local/bin/helm
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com
    - helm dependency update helm-charts/kre-chart
    - mkdir -p $HOME/.docker/cli-plugins/
    - wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL
    - chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --driver docker-container --name ${BUILDX_BUILDER} --platform=${BUILDX_PLATFORM}
    - docker buildx inspect --bootstrap ${BUILDX_BUILDER}
    - docker buildx ls
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - TAG=${CI_COMMIT_TAG#k8s-runtime-operator-v}
    - docker buildx build --push --platform ${BUILDX_PLATFORM}
      --tag $IMAGE_PROJECT_NAME:$TAG
      --tag $IMAGE_PROJECT_NAME:latest
      .
  rules:
    - if: '$CI_COMMIT_TAG =~ /^k8s-runtime-operator-v\d*.\d*.\d*$/'
      when: always
