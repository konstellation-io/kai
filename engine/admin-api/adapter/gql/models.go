// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gql

import (
	"github.com/99designs/gqlgen/graphql"
	"github.com/konstellation-io/kai/engine/admin-api/domain/entity"
)

type ConfigurationVariablesInput struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type CreateProductInput struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

type CreateVersionInput struct {
	File      graphql.Upload `json:"file"`
	ProductID string         `json:"productID"`
}

type LogPage struct {
	Cursor *string           `json:"cursor,omitempty"`
	Items  []*entity.NodeLog `json:"items"`
}

type PublishVersionInput struct {
	VersionName string `json:"versionName"`
	Comment     string `json:"comment"`
	ProductID   string `json:"productID"`
}

type RevokeUserProductGrantsInput struct {
	TargetID string  `json:"targetID"`
	Product  string  `json:"product"`
	Comment  *string `json:"comment,omitempty"`
}

type Settings struct {
	AuthAllowedDomains    []string `json:"authAllowedDomains"`
	SessionLifetimeInDays int      `json:"sessionLifetimeInDays"`
}

type SettingsInput struct {
	AuthAllowedDomains    []string `json:"authAllowedDomains,omitempty"`
	SessionLifetimeInDays *int     `json:"sessionLifetimeInDays,omitempty"`
}

type StartVersionInput struct {
	VersionName string `json:"versionName"`
	Comment     string `json:"comment"`
	ProductID   string `json:"productID"`
}

type StopVersionInput struct {
	VersionName string `json:"versionName"`
	Comment     string `json:"comment"`
	ProductID   string `json:"productID"`
}

type UnpublishVersionInput struct {
	VersionName string `json:"versionName"`
	Comment     string `json:"comment"`
	ProductID   string `json:"productID"`
}

type UpdateConfigurationInput struct {
	VersionName            string                         `json:"versionName"`
	ProductID              string                         `json:"productID"`
	ConfigurationVariables []*ConfigurationVariablesInput `json:"configurationVariables"`
}

type UpdateUserProductGrantsInput struct {
	TargetID string   `json:"targetID"`
	Product  string   `json:"product"`
	Grants   []string `json:"grants"`
	Comment  *string  `json:"comment,omitempty"`
}
