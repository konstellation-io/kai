// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockObjectStorage is an autogenerated mock type for the ObjectStorage type
type MockObjectStorage struct {
	mock.Mock
}

type MockObjectStorage_Expecter struct {
	mock *mock.Mock
}

func (_m *MockObjectStorage) EXPECT() *MockObjectStorage_Expecter {
	return &MockObjectStorage_Expecter{mock: &_m.Mock}
}

// CreateFolder provides a mock function with given fields: name
func (_m *MockObjectStorage) CreateFolder(name string) error {
	ret := _m.Called(name)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockObjectStorage_CreateFolder_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateFolder'
type MockObjectStorage_CreateFolder_Call struct {
	*mock.Call
}

// CreateFolder is a helper method to define mock.On call
//   - name string
func (_e *MockObjectStorage_Expecter) CreateFolder(name interface{}) *MockObjectStorage_CreateFolder_Call {
	return &MockObjectStorage_CreateFolder_Call{Call: _e.mock.On("CreateFolder", name)}
}

func (_c *MockObjectStorage_CreateFolder_Call) Run(run func(name string)) *MockObjectStorage_CreateFolder_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockObjectStorage_CreateFolder_Call) Return(_a0 error) *MockObjectStorage_CreateFolder_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockObjectStorage_CreateFolder_Call) RunAndReturn(run func(string) error) *MockObjectStorage_CreateFolder_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockObjectStorage creates a new instance of MockObjectStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockObjectStorage(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockObjectStorage {
	mock := &MockObjectStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
