// Code generated by MockGen. DO NOT EDIT.
// Source: process_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProcessRepository is a mock of ProcessRepository interface.
type MockProcessRepository struct {
	ctrl     *gomock.Controller
	recorder *MockProcessRepositoryMockRecorder
}

// MockProcessRepositoryMockRecorder is the mock recorder for MockProcessRepository.
type MockProcessRepositoryMockRecorder struct {
	mock *MockProcessRepository
}

// NewMockProcessRepository creates a new mock instance.
func NewMockProcessRepository(ctrl *gomock.Controller) *MockProcessRepository {
	mock := &MockProcessRepository{ctrl: ctrl}
	mock.recorder = &MockProcessRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProcessRepository) EXPECT() *MockProcessRepositoryMockRecorder {
	return m.recorder
}

// CreateProcess mocks base method.
func (m *MockProcessRepository) CreateProcess() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProcess")
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateProcess indicates an expected call of CreateProcess.
func (mr *MockProcessRepositoryMockRecorder) CreateProcess() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProcess", reflect.TypeOf((*MockProcessRepository)(nil).CreateProcess))
}
