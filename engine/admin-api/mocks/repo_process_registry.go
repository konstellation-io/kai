// Code generated by MockGen. DO NOT EDIT.
// Source: process_registry.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/konstellation-io/kai/engine/admin-api/domain/entity"
)

// MockProcessRegistryRepo is a mock of ProcessRegistryRepo interface.
type MockProcessRegistryRepo struct {
	ctrl     *gomock.Controller
	recorder *MockProcessRegistryRepoMockRecorder
}

// MockProcessRegistryRepoMockRecorder is the mock recorder for MockProcessRegistryRepo.
type MockProcessRegistryRepoMockRecorder struct {
	mock *MockProcessRegistryRepo
}

// NewMockProcessRegistryRepo creates a new mock instance.
func NewMockProcessRegistryRepo(ctrl *gomock.Controller) *MockProcessRegistryRepo {
	mock := &MockProcessRegistryRepo{ctrl: ctrl}
	mock.recorder = &MockProcessRegistryRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProcessRegistryRepo) EXPECT() *MockProcessRegistryRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockProcessRegistryRepo) Create(productID string, newProcessRegistry *entity.ProcessRegistry) (*entity.ProcessRegistry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", productID, newProcessRegistry)
	ret0, _ := ret[0].(*entity.ProcessRegistry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockProcessRegistryRepoMockRecorder) Create(productID, newProcessRegistry interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockProcessRegistryRepo)(nil).Create), productID, newProcessRegistry)
}

// CreateIndexes mocks base method.
func (m *MockProcessRegistryRepo) CreateIndexes(ctx context.Context, productID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateIndexes", ctx, productID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateIndexes indicates an expected call of CreateIndexes.
func (mr *MockProcessRegistryRepoMockRecorder) CreateIndexes(ctx, productID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIndexes", reflect.TypeOf((*MockProcessRegistryRepo)(nil).CreateIndexes), ctx, productID)
}

// ListByProductWithTypeFilter mocks base method.
func (m *MockProcessRegistryRepo) ListByProductWithTypeFilter(ctx context.Context, productID, processType string) ([]*entity.ProcessRegistry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListByProductWithTypeFilter", ctx, productID, processType)
	ret0, _ := ret[0].([]*entity.ProcessRegistry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListByProductWithTypeFilter indicates an expected call of ListByProductWithTypeFilter.
func (mr *MockProcessRegistryRepoMockRecorder) ListByProductWithTypeFilter(ctx, productID, processType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListByProductWithTypeFilter", reflect.TypeOf((*MockProcessRegistryRepo)(nil).ListByProductWithTypeFilter), ctx, productID, processType)
}
