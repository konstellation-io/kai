// Code generated by MockGen. DO NOT EDIT.
// Source: registry.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProcessRegistry is a mock of ProcessRegistry interface.
type MockProcessRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockProcessRegistryMockRecorder
}

// MockProcessRegistryMockRecorder is the mock recorder for MockProcessRegistry.
type MockProcessRegistryMockRecorder struct {
	mock *MockProcessRegistry
}

// NewMockProcessRegistry creates a new mock instance.
func NewMockProcessRegistry(ctrl *gomock.Controller) *MockProcessRegistry {
	mock := &MockProcessRegistry{ctrl: ctrl}
	mock.recorder = &MockProcessRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProcessRegistry) EXPECT() *MockProcessRegistryMockRecorder {
	return m.recorder
}

// DeleteProcess mocks base method.
func (m *MockProcessRegistry) DeleteProcess(image, version string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProcess", image, version)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteProcess indicates an expected call of DeleteProcess.
func (mr *MockProcessRegistryMockRecorder) DeleteProcess(image, version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProcess", reflect.TypeOf((*MockProcessRegistry)(nil).DeleteProcess), image, version)
}
