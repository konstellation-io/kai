test-kre-py:
  stage: test
  image: python:3.7
  script:
    - echo "HERE PASS PYTHON TESTS"
    - touch runners/kre-py/kre-py-coverage.out
    - touch runners/kre-py/kre-py-report.xml
  coverage: /^TOTAL.+?(\d+\%)$/
  artifacts:
    paths:
      - runners/kre-py/kre-py-coverage.out
    reports:
      junit: runners/kre-py/kre-py-report.xml
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
      changes:
        - runners/kre-py/**/*

sonar-kre-py:
  extends: .sonar-scanner
  variables:
    SONAR_TOKEN: $SONAR_TOKEN_KRE_PY
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/runners/kre-py/.sonar"
    COMPONENT_PATH: runners/kre-py
    GIT_DEPTH: "0"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
      changes:
        - runners/kre-py/**/*

release-kre-py:
  stage: semantic-release
  image: node:10
  before_script:
    - npm install --prefix runners/kre-py
  script:
    - cd runners/kre-py && npx semantic-release --debug
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
      changes:
        - runners/kre-py/**/*
        - .gitlab-ci.yml

publish-kre-py-image:
  stage: publish-image
  image: docker:18-git
  services:
    - docker:18-dind
  variables:
    IMAGE_PROJECT_NAME: "konstellation/kre-py"
    DOCKER_USER: $DOCKER_USER
    DOCKER_PASS: $DOCKER_PASS
  before_script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - TAG=${CI_COMMIT_TAG#kre-py-v}
    - docker build -t $IMAGE_PROJECT_NAME:$TAG runners/kre-py
    - docker tag $IMAGE_PROJECT_NAME:$TAG $IMAGE_PROJECT_NAME:latest
    - docker push $IMAGE_PROJECT_NAME:$TAG
    - docker push $IMAGE_PROJECT_NAME:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^kre-py-v\d*.\d*.\d*$/'
      when: always

publish-kre-py-image-arm64:
  stage: publish-image
  image: docker:19
  services:
    - name: docker:19.03.6-dind
      command: ["--experimental"]

  variables:
    IMAGE_PROJECT_NAME: "konstellation/kre-py"
    DOCKER_USER: $DOCKER_USER
    DOCKER_PASS: $DOCKER_PASS
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
    DOCKER_CLI_EXPERIMENTAL: enabled
    BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
    BUILDX_BUILDER: multiarch
    BUILDX_PLATFORM: "linux/arm64"

  before_script:
    - mkdir -p $HOME/.docker/cli-plugins/
    - wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL
    - chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --driver docker-container --name ${BUILDX_BUILDER} --platform=${BUILDX_PLATFORM}
    - docker buildx inspect --bootstrap ${BUILDX_BUILDER}
    - docker buildx ls
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - TAG=${CI_COMMIT_TAG#kre-py-v}
    - docker buildx build -f runners/kre-py/Dockerfile.arm64 --push --platform ${BUILDX_PLATFORM}
      --tag $IMAGE_PROJECT_NAME:$TAG-arm64
      --tag $IMAGE_PROJECT_NAME:latest-arm64
      runners/kre-py
  rules:
    - if: '$CI_COMMIT_TAG =~ /^kre-py-v\d*.\d*.\d*$/'
      when: always
