release-helm-chart:
  stage: semantic-release
  image: node:10
  before_script:
    - npm install -g semantic-release@15.14.0 semantic-release/github
  script:
    - semantic-release -t helm-chart-v\${version}
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
      changes:
      - helm/**/*

release-helm-after-image:
  stage: semantic-release-helm
  image: node:10
  before_script:
    - npm install -g semantic-release@15.14.0 semantic-release/github
  script:
    - semantic-release -t helm-chart-v\${version} -b $CI_COMMIT_TAG

  rules:
    - if: '$CI_COMMIT_TAG != "" && $CI_COMMIT_TAG !~ /^helm-chart-v\d*.\d*.\d*$/'
      when: manual

generate-helm-chart:
  stage: build
  image: docker:18-git
  services:
    - docker:18-dind
  variables:
    HELM_VERSION: v3.0.3
    CHART_RELEASER: 1.0.0-beta.1
  before_script:
    - apk add --update bash gettext coreutils
    - wget -q https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm
    - chmod +x /usr/local/bin/helm
    - wget -q https://github.com/helm/chart-releaser/releases/download/v${CHART_RELEASER}/chart-releaser_${CHART_RELEASER}_linux_amd64.tar.gz -O - | tar -xzO cr > /usr/local/bin/cr
    - chmod +x /usr/local/bin/cr
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com
    - helm plugin install https://github.com/chartmuseum/helm-push
    - helm repo add konstellation-ce https://${HELM_USER}:${HELM_PASSWD}@charts.konstellation.io
    - export ADMIN_API_IMAGE_TAG=$(./scripts/git_latest_tag.sh "admin-api")
    - export ADMIN_UI_IMAGE_TAG=$(./scripts/git_latest_tag.sh "admin-ui")
    - export K8S_MANAGER_IMAGE_TAG=$(./scripts/git_latest_tag.sh "k8s-manager")
    - ./scripts/replace_env_path.sh
  script:
    - export CHART_VERSION=${CI_COMMIT_TAG#helm-chart-v}
    - helm dep update helm/kre
    - helm package helm/kre --version $CHART_VERSION
    - /usr/local/bin/cr index -o konstellation-io -r kre -c https://github.com/konstellation-io/kre -i index.yaml -p helm/kre --token $GITHUB_TOKEN
  artifacts:
    expire_in: 3 hours
    when: on_success
    paths:
      - kre-*.tgz
  rules:
    - if: '$CI_COMMIT_TAG =~ /^helm-chart-v\d*.\d*.\d*$/'
      when: always

deploy-helm-int:
  stage: deploy
  environment:
    name: int
  variables:
    HELM_VERSION: v3.0.3
  image: google/cloud-sdk:266.0.0
  before_script:
    - apt-get update
    - apt-get install -y gettext wget
    # Use Google Cloud Credentials to get a kubeconfig file
    - echo "$GCP_SERVICE_ACCOUNT" | base64 -d > service-account.json
    - gcloud auth activate-service-account terraform@konstellation.iam.gserviceaccount.com --key-file=./service-account.json --project=konstellation
    - gcloud container clusters get-credentials konstellation-int --zone=europe-west1-b --user-output-enabled
    # Install Helm
    - wget -q https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm
    - chmod +x /usr/local/bin/helm
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com
  script:
    - kubectl create ns kre --dry-run -o yaml | kubectl apply -f -
    - export CHART_VERSION=${CI_COMMIT_TAG#helm-chart-v}
    - helm repo add konstellation-ce https://charts.konstellation.io
    - helm upgrade
      --wait
      --install kre
      --namespace kre
      --values helm/values-int-gke.yml
      --values $SMTP_CONFIG
      --version $CHART_VERSION
      konstellation-ce/kre
  rules:
    - if: '$CI_COMMIT_TAG =~ /^helm-chart-v\d*.\d*.\d*$/'
      when: always
