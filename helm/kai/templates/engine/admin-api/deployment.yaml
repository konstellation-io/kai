apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-admin-api
  labels:
    {{- include "admin-api.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "admin-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "admin-api.labels" . | nindent 8 }}
        type: admin
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/engine/admin-api/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/engine/admin-api/secret.yaml") . | sha256sum }}
    spec:
      {{- with .Values.adminApi.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.adminApi.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.adminApi.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
{{/*        allowPrivilegeEscalation: false*/}}
{{/*        runAsUser: 0*/}}
        capabilities:
          add:
            - 'SYS_ADMIN'
          privileged: true
        fsGroup: 10001
      initContainers:
        - name: create-admin-api-files-directory
          image: alpine:3.10
          imagePullPolicy: IfNotPresent
          command:
          - sh
          - -c
          - mkdir -p {{ .Values.adminApi.storage.path }} && chown 10001:10001 {{ .Values.adminApi.storage.path }}
          volumeMounts:
            - name: admin-api-pv-storage
              mountPath: {{ .Values.adminApi.storage.path }}
      containers:
        - name: admin-api
          image: {{ .Values.adminApi.image.repository }}:{{ .Values.adminApi.image.tag }}
          imagePullPolicy: {{ .Values.adminApi.image.pullPolicy }}
          securityContext:
            capabilities:
              add:
                - CAP_SETGID
                - CAP_SETUID
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-admin-api
            - secretRef:
                name: {{ .Release.Name }}-admin-api
          env:
            - name: FOO
              value: BAR
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KAI_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.mongodb.connectionString.secretName }}
                  key: {{ .Values.config.mongodb.connectionString.secretKey }}
            - name: KEYCLOAK_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.secretName" . }}
                  key: {{ include "keycloak.secretUserKey" . }}
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.secretName" . }}
                  key: {{ include "keycloak.secretPasswordKey" . }}
          ports:
            - containerPort: 8080
              protocol: TCP
              name: grpc
          volumeMounts:
            - name: admin-api-pv-storage
              mountPath: {{ .Values.adminApi.storage.path }}
            - name: config
              mountPath: /etc/containers
      volumes:
        - name: admin-api-pv-storage
          persistentVolumeClaim:
            claimName: admin-api-pv-claim
        - name: config
          configMap:
            name: {{ .Release.Name }}-admin-api
            items:
              - key: registries.conf
                path: registries.conf
              - key: policy.json
                path: policy.json
              - key: storage.conf
                path: storage.conf
